<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020年我的年终总结</title>
    <url>/2020/12/31/2020%E6%88%91%E7%9A%84%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="2020年12月31日"><a href="#2020年12月31日" class="headerlink" title="2020年12月31日"></a>2020年12月31日</h1><p>仔细想想，今年好像也没做几件让我印象很深的事情。</p>
 <span id="more"></span>



<h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>2020年1月一场突如其来的新冠肺炎，打乱了很多事情的节奏。甚至影响到了世界的进程。然而，其实对我这个小人物并没有太多的影响。</p>
<p>去年年末，就开始做了一个小领导，产品运营经理，手下也有十几个同事归我负责。说起来，从我毕业也就一年多的时间，能做到这样似乎是一件很有成就感的事情。然而，我却深感于，产品运营这个岗位的局限性，也许是我思考的眼界问题，我始终觉得并没有多少安全感，因为做产品运营，会深深的局限于某个行业，如果未来这个行业不行，也许我就没什么竞争力了。</p>
<p>所以在反复思考之后，我最终决定转岗，从零开始，于是，机缘巧合之下，做起了项目经理，也开始了被职场PUA的历史。一个拥有数千万合同额的项目，初始，实在是诚惶诚恐，不知道领导为什么这么信任我，认为我就一定能够做好。其实，后来想想一方面是因为疫情实在是没办法招到一个合适的人来做这件事情，另一方面，基于我之前的产品运营经历，在这个甲方的心中，建立了足够的信任。不过，也必须感谢自己的领导，不然，我不会有这样的机会。</p>
<p>虽然近乎被PUA了一年，但是，不得不承认，这近一年的时间是我毕业以来成长最多成长最快的时间。在这近一年的时间中，我对于AI产品，在数据层面、系统架构层面、网络层面、技术原理方面，都做到了心中有术。其实，我认为自己提升最多的，反而是自己的软技能，沟通能力和逻辑表达能力。无论是跟客户打交道，还是内部协调资源，个人从害怕主动去认识人，到谁都不怕。从张嘴就得罪人，到所有人都对你认可，这种成就感，也许是最让人开心的。</p>
<p>PS，被PUA与直属上级无关，相反，我今年最感谢的人是他。虽然最后离开并不是特别愉快。但是，哪能都那么如意。</p>
<p>这两年多，从想做数据分析师的青涩学生，到误打误撞进入AI行业，做了运营，项目经理，最后又来到保险行业做产品经理，经历过很多，越来越认识到，选择和机会一样重要。</p>
<h2 id="感情和家庭"><a href="#感情和家庭" class="headerlink" title="感情和家庭"></a>感情和家庭</h2><p>今年于我而言，最重要的事情，也许就是与她订婚了。期盼2021的婚礼。</p>
<p>我们两个今年让我有印象的吵架就一次。远远小于去年。这是一种好事吧。互相磨合的基本差不多了。</p>
<p>印象最深的给她的惊喜，一个是买了一天的丰巢图片展示，一个是做了一个她的照片视频。永远忘不了她的笑声。以后这样的惊喜，还是要好好的准备。</p>
<p>也很感谢她为我精心准备的生日礼物和惊喜。说实话，那天回家，他开灯的那一瞬间，真的是20多年来，第一次嘭的跳动了一下。</p>
<p>很开心以后的日子里会有她作伴。</p>
<p>也很庆幸，父母今年都很健康。</p>
<p>反反复复思考数个月，终于下定决心，变成了一个天津人。为了我和她的未来吧。离开自己生活了30年的地方，犹犹豫豫数个月，总觉得好像根断了。但是仔细想想，父母在哪儿，家就在哪儿。</p>
<p>从6月开始，因为疫情，陆陆续续看了几个月的房子，直到今天都没买。说来好笑，是因为我们两个看着太多的杠杆，心里没有安全感。</p>
<p>不过刚需，没必要想太多了。2021，它是需要先被解决的一件大事。</p>
<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>很快要搬家了。朝阳区中海城圣朝菲，这个小区我已经住了两年从2019年1月18日。</p>
<p>在这里住的最大的感受，就是以后，买房子一定要找好的物业公司。</p>
<p>到北京已经29个月了。还是没有多少归属感。不过，幸亏，有她在。</p>
<p>貌似今年就看了3场电影。</p>
<h2 id="学习和理财"><a href="#学习和理财" class="headerlink" title="学习和理财"></a>学习和理财</h2><p>感觉这个没什么好说的。除了平时一直看的各种网络小说，已经好久没正儿八经去看一些专业书籍了。今年可以说是一事无成。</p>
<p>好不容易报了PMP考试。结果，考试从6月到现在，取消了3场。愿明年4月可以考试。</p>
<p>剩下的都是工作中学的各种工作知识了吧。这也是今年心里最不安的。好在，终于不再做烦人的项目经理了。</p>
<p>今年是理财小有成就的一年，说到底，是必须感谢自己近两年坚持的定投，和不断零碎时间学习的理财知识。年化收益率24%。还需要再接再厉。2年了，越来越觉得孟岩说的额那句话无比的，投资是认知的变现。</p>
<h1 id="2021年对自己的期许"><a href="#2021年对自己的期许" class="headerlink" title="2021年对自己的期许"></a>2021年对自己的期许</h1><h2 id="工作-1"><a href="#工作-1" class="headerlink" title="工作"></a>工作</h2><ol>
<li>希望可以打通自己保险行业的任督二脉。</li>
<li>学会做一个好的产品经理。</li>
<li>学会原型图工具。</li>
<li>学会写一个清晰地需求规格说明书。</li>
<li>阅读5本专业的产品经理书籍。</li>
</ol>
<h2 id="感情和家庭-1"><a href="#感情和家庭-1" class="headerlink" title="感情和家庭"></a>感情和家庭</h2><ol>
<li>在5月份之前把房子买了。</li>
<li>在5月份之前把婚纱照拍了。</li>
<li>在11月之前把她娶了。</li>
<li>给父母们买防癌险。</li>
<li>给自己和她买重疾险。</li>
</ol>
<h2 id="学习和理财-1"><a href="#学习和理财-1" class="headerlink" title="学习和理财"></a>学习和理财</h2><ol>
<li>拿下PMP证书。</li>
<li>把数据分析技能拾起来。</li>
<li>读10本专业书籍（专业技能和理财），当然，网络小说不算数。</li>
<li>将有知有行上面的文章都读透读懂。</li>
<li>尝试买股票，并长期持有，现在看好小米、平安、金山办公、科大讯飞。</li>
<li>争取理财收益率不低于15%。</li>
<li>开始每个月存1000块，用于我和她的养老金准备。</li>
</ol>
<h2 id="生活-1"><a href="#生活-1" class="headerlink" title="生活"></a>生活</h2><ol>
<li>每个月看一场电影。</li>
<li>如果疫情好转，就出去旅行一次。</li>
<li>想办法带着她一起玩游戏。</li>
<li>如果还有其他可以开心的，一定要玩。</li>
<li>哦，对了，想回趟大学母校看看。</li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL安装、输入密码闪退、workbench使用</title>
    <url>/2021/11/07/MySQL%E5%AE%89%E8%A3%85%E3%80%81%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81%E9%97%AA%E9%80%80%E3%80%81workbench%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h1><p>安装就不细说了，网上一搜一大堆，但是教程推荐这个：</p>
<p><a href="http://t.cn/RXmj4zF">wikihow</a></p>
<p>网站是wikiHOW，很有意思的网站，比百度经验强大很多。</p>
<span id="more"></span>



<h1 id="2、输入密码闪退"><a href="#2、输入密码闪退" class="headerlink" title="2、输入密码闪退"></a>2、输入密码闪退</h1><p>安装完成后，在开始菜单，打开</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110223927629.png" alt="image-20211110223927629"></p>
<p>开始程序</p>
<p>界面如下：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110223939313.png" alt="image-20211110223939313"></p>
<p>密码</p>
<p>输入你安装的时候所设置的根密码，回车，本该进入程序，这时，你发现程序闪退。</p>
<p>这一般是由于服务没有开启。</p>
<p>如果你是win10 ，就喊一声“你好小娜，打开服务”，win7之类的就在开始菜单搜索服务。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110223953144.png" alt="image-20211110223953144"></p>
<p>服务</p>
<p>右击启动，或重新启动。</p>
<p>如果是手动模式，你可以右击属性改为自动。</p>
<p>再去打开<strong>MySQL Command line client</strong>，输入密码，界面如下，即已正常。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224014054.png" alt="image-20211110224014054"></p>
<p><strong>MySQL命令窗口</strong></p>
<h1 id="3、workbench"><a href="#3、workbench" class="headerlink" title="3、workbench"></a>3、workbench</h1><p>首先搜索，workbench，然后在官网下载安装即可。</p>
<p><a href="https://dev.mysql.com/downloads/workbench/">workbench</a></p>
<p>这里有一个问题，如下图：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224031337.png" alt="image-20211110224031337"></p>
<p>workbench</p>
<p>你必须保证安装之前电脑已安装了二者，如果没有安装，点击二者，转到微软官网，下载相应版本安装即可。这个安装很简单。</p>
<p>安装后打开，界面如下：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224047608.png" alt="image-20211110224047608"></p>
<p><strong>欢迎界面</strong></p>
<p>单击加号创建新的连接，连接新的数据库。单击矩形框中，直接打开服务器，这里需要输入密码，即你的mysql密码。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224109215.png" alt="image-20211110224109215"></p>
<p><strong>密码</strong></p>
<p>在这里有一个问题，如果总是出现improper name等信息，那可能跟上方的问题一样，你的MySQL服务没有开启，去开启，然后在输入密码即可。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224125888.png" alt="image-20211110224125888"></p>
<p><strong>界面</strong></p>
<p>箭头部分创建数据库，表等等。右侧输入查询指令，关于SQL的声明等。点击黄色闪电执行相应命令。</p>
<p>当然，在查询之前需要制定数据库：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224144446.png" alt="image-20211110224144446"></p>
<p><strong>databases</strong></p>
<p>比如，查看当前所有数据库：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224201022.png" alt="image-20211110224201022"></p>
<p>数据库</p>
<p>我的公众号，基本是自己的学习日志，有些小工具。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224216854.png" alt="image-20211110224216854"></p>
]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas数据类型转换的大坑</title>
    <url>/2019/03/14/Pandas%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%A4%A7%E5%9D%91/</url>
    <content><![CDATA[<p><strong>Pandas的数据类型是一个必须要注意的地方！！！</strong></p>
<span id="more"></span>

<hr>
<p><strong>数据类型，开始我真的没怎么太注意。。后来真的是掉进了这个大坑。将我埋掉了。</strong></p>
<hr>
<h2 id="问题起源"><a href="#问题起源" class="headerlink" title="问题起源"></a>问题起源</h2><p>首先，我要对数据进行去重，再去重之后，在对数据的<code>call_id</code>进行计数，最终我发现，我和别人统计的结果有差别。<strong>差了1。</strong></p>
<p>我是拿到数据，直接导入pandas，然后直接去重。最后掉进了这个大坑。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"></span><br><span class="line">path = <span class="string">r&#x27;C:\Users\admin\Desktop\renshou\data&#x27;</span><span class="comment">#路径</span></span><br><span class="line"></span><br><span class="line">filenames = glob.glob(path + <span class="string">&quot;/*.txt&quot;</span>)<span class="comment">#文件路径</span></span><br><span class="line"></span><br><span class="line">call_data = pd.DataFrame()</span><br><span class="line">list_call_data = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#用pandas读取所有数据，并连接到一个DataFrame中。</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> filenames:</span><br><span class="line">    filename =<span class="built_in">open</span>(file_name) </span><br><span class="line">    df = pd.read_table(filename,sep = <span class="string">&#x27;,&#x27;</span>,header = <span class="number">0</span>,index_col = <span class="literal">False</span>,encoding = <span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">    list_call_data.append(df)</span><br><span class="line">    </span><br><span class="line">call_data = pd.concat(list_call_data)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据call_id去重，并保留第一次出现的行</span></span><br><span class="line">cle_call_data = call_data.drop_duplicates(subset = <span class="string">&#x27;call_id&#x27;</span>,keep = <span class="string">&#x27;first&#x27;</span>)</span><br><span class="line"></span><br><span class="line">call_data1 = cle_call_data[<span class="string">&#x27;call_id&#x27;</span>]</span><br><span class="line">call_data1.count()</span><br><span class="line">output：<span class="number">142034</span></span><br></pre></td></tr></table></figure>

<p><strong>而同事统计出来是142033。</strong></p>
<p><strong>到了这里，我就突然想来了是不是数据类型出了问题。</strong></p>
<p>最终经过验证，确实是。我将数据导出至CSV，在Excel中去重，果然，count变成了142033。</p>
<p>我对<code>call_id</code>进行astype的强制类型转换，抛出了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ValueError: invalid literal <span class="keyword">for</span> <span class="built_in">int</span>() <span class="keyword">with</span> base <span class="number">10</span>: <span class="string">&#x27;1532862726-371&#x27;</span></span><br></pre></td></tr></table></figure>

<p>果然是数据类型问题，但是，由于数据量比较大，我想了各种办法，将这个取出来也没看出有什么问题。看不出他是str类型。实在是，不知道问题出在了哪里。参考网上的解决方法均失败。。。唉。。。</p>
<p><strong>最终好好学习了一下数据类型转换。</strong></p>
<p>主要参考文献：</p>
<ul>
<li><a href="https://www.cnblogs.com/onemorepoint/p/9404753.html#top">多一点</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/genindex.html#S">pandas index</a></li>
<li><a href="http://bluewhale.cc/2016-08-22/data-extraction-using-python.html">数据提取</a></li>
<li><a href="https://segmentfault.com/a/1190000014713098">Pandas数据类型转换的几个小技巧</a></li>
</ul>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Python常见错误</title>
    <url>/2019/03/14/Python%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h2 id="python常见错误"><a href="#python常见错误" class="headerlink" title="python常见错误"></a>python常见错误</h2><h3 id="pandas读取文件报错"><a href="#pandas读取文件报错" class="headerlink" title="pandas读取文件报错"></a>pandas读取文件报错</h3><span id="more"></span>

<h4 id="文件不存在"><a href="#文件不存在" class="headerlink" title="文件不存在"></a>文件不存在</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">path = <span class="string">r&#x27;C:\Users\admin\Desktop\data\19\190103am9&#x27;</span></span><br><span class="line">data = pd.DataFrame(pd.read_excel(path))</span><br></pre></td></tr></table></figure>

<p>运行报错如下：</p>
<blockquote>
<p>FileNotFoundError: [Errno 2] No such file or directory:’C:\Users\admin\Desktop\data\19\中国人寿190103am9’</p>
</blockquote>
<p>文件不存在那肯定是路径的问题。去看路径，哎，好像没问题啊，都是对的。</p>
<p>但是仔细看几遍，你就会发现，<strong>文件路径的最终文件名没有加后缀。</strong></p>
<p>改成：</p>
<p><code>path = r&#39;C:\Users\admin\Desktop\data\19\190103am9.xlsx&#39;</code></p>
<p>成功。</p>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>Data analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL的学习</title>
    <url>/2019/03/06/SQL%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><em><strong>SQL的学习之路，主要参考资料是：</strong></em></p>
<p><a href="http://www.forta.com/books/">SQL必知必会</a><br><a href="http://www.w3school.com.cn/sql/sql_intro.asp">W3school的SQL简介</a></p>
<span id="more"></span>

<hr>
<p><em>右击，新标签页即可打开原图</em></p>
<hr>
<p>操作使用的数据库为Access及MySQL。</p>
<p>数据采用的是<a href="http://www.forta.com/books/0672336073/">SQL必知必会中的数据</a></p>
<p>（最下方可以下载数据）。其有5个表，表的关系如下：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-99088ca1862965fb.png" alt="表的关系"></p>
<p>看不清的图片：右击新标签页打开即可。</p>
<h2 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-222314eb1f925db6.png" alt="基础"></strong></p>
<h2 id="检索数据"><a href="#检索数据" class="headerlink" title="检索数据"></a>检索数据</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-c1c028d7564d3da8.png" alt="检索数据"></strong></p>
<h2 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-c693e117d6abcc60.png" alt="排序检索数据"></strong></p>
<h2 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-51aeffe488410f0a.png" alt="过滤数据"></strong></p>
<h2 id="高级过滤"><a href="#高级过滤" class="headerlink" title="高级过滤"></a>高级过滤</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-c270a132adb7e1d8.png" alt="高级过滤"></strong></p>
<h2 id="通配符过滤"><a href="#通配符过滤" class="headerlink" title="通配符过滤"></a>通配符过滤</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-9e7cba4ab00b6321.png" alt="通配符过滤"></strong></p>
<h2 id="创建计算字段"><a href="#创建计算字段" class="headerlink" title="创建计算字段"></a>创建计算字段</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-b2f793a6d398268a.png" alt="创建计算字段"></strong></p>
<h2 id="函数特性"><a href="#函数特性" class="headerlink" title="函数特性"></a>函数特性</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-f9ba72858e528097.png" alt="函数特性"></strong></p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-74c41fb49ee70c67.png" alt="函数"></strong></p>
<h2 id="汇总数据"><a href="#汇总数据" class="headerlink" title="汇总数据"></a>汇总数据</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-df74f29143b75438.png" alt="汇总数据"></strong></p>
<h2 id="分组数据"><a href="#分组数据" class="headerlink" title="分组数据"></a>分组数据</h2><p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-a693680c78b33f85.png" alt="分组数据"></strong></p>
<hr>
<p><em><strong>以上测试均在Access数据库中进行，以下于MySQL中进行，通过workbench（版本6.3）操作。</strong></em></p>
<hr>
<h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p><strong>这里说白了就是select语句嵌套，如<code>select * from （select cust_name from customers）</code></strong></p>
<p><strong><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-d014cba6ca420003.png" alt="子查询"></strong></p>
<h2 id="联结"><a href="#联结" class="headerlink" title="联结"></a>联结</h2><p><em><a href="https://zh.wikipedia.org/wiki/%E7%AC%9B%E5%8D%A1%E5%84%BF%E7%A7%AF">笛卡尔积</a></em></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-90c8c6da8719925a.png" alt="联结"></p>
<h2 id="高级联结"><a href="#高级联结" class="headerlink" title="高级联结"></a>高级联结</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-f451dda80331d3da.png" alt="高级联结"></p>
<p><em><strong>如果3个以上的表，那怎样联结？</strong></em></p>
<ol>
<li>3个</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use test;</span><br><span class="line"><span class="keyword">select</span> cust_name,cust_contact</span><br><span class="line"><span class="keyword">from</span> (customers </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> orders</span><br><span class="line"><span class="keyword">on</span> customers.cust_id <span class="operator">=</span> orders.cust_id)</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> orderitems </span><br><span class="line"><span class="keyword">on</span> orderitems.order_num <span class="operator">=</span> orders.order_num;</span><br></pre></td></tr></table></figure>

<p>语法可以概括为：</p>
<p><em><strong><code>FROM (表1 INNER JOIN 表2 ON 表1.字段号=表2.字段号) INNER JOIN 表3 ON 表1.字段号=表3.字段号</code></strong></em></p>
<ol start="2">
<li>同理，4个表可以概括为：</li>
</ol>
<p><em><strong><code>FROM ((表1 INNER JOIN 表2 ON 表1.字段号=表2.字段号) INNER JOIN 表3 ON 表1.字段号=表3.字段号) INNER JOIN 表4 ON Member.字段号=表4.字段号</code></strong></em></p>
<h2 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-2f00deb32b8b47bb.png" alt="组合查询"></p>
<hr>
<p> <em>如果代码块阅读困难，可移步<a href="http://www.cnblogs.com/sunshinewang/p/6789419.html">博客园</a></em></p>
<hr>
<p><em><strong>关于规则中列顺序，前后必须一致。</strong></em>否则会出现如下情况：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> use test; </span><br><span class="line"><span class="number">2</span> <span class="keyword">select</span> cust_name ,cust_email,cust_contact</span><br><span class="line"><span class="number">3</span> <span class="keyword">from</span> customers</span><br><span class="line"><span class="number">4</span> <span class="keyword">where</span> cust_state <span class="keyword">in</span> (<span class="string">&#x27;IL&#x27;</span>,<span class="string">&#x27;IN&#x27;</span>,<span class="string">&#x27;MI&#x27;</span>)</span><br><span class="line"><span class="number">5</span> <span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">select</span> cust_name,cust_contact,cust_email</span><br><span class="line"><span class="number">7</span> <span class="keyword">from</span> customers</span><br><span class="line"><span class="number">8</span> <span class="keyword">where</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Fun4All&#x27;</span></span><br></pre></td></tr></table></figure>

<p>返回结果为：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-8056401714986ffe.png" alt="返回结果"></p>
<p>列的顺序一致，才会返回正确结果</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> use test;</span><br><span class="line"><span class="number">2</span> <span class="keyword">select</span> cust_name ,cust_email,cust_contact</span><br><span class="line"><span class="number">3</span> <span class="keyword">from</span> customers</span><br><span class="line"><span class="number">4</span> <span class="keyword">where</span> cust_state <span class="keyword">in</span> (<span class="string">&#x27;IL&#x27;</span>,<span class="string">&#x27;IN&#x27;</span>,<span class="string">&#x27;MI&#x27;</span>)</span><br><span class="line"><span class="number">5</span> <span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">select</span> cust_name,cust_email,cust_contact</span><br><span class="line"><span class="number">7</span> <span class="keyword">from</span> customers8 <span class="keyword">where</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Fun4All&#x27;</span></span><br></pre></td></tr></table></figure>


<p>结果：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-322eef5f933e81f2.png" alt="返回结果"></p>
<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p><em><strong>INSERT SELECT:</strong></em></p>
<p>它可以将SELCET语句结果插入表中，在<em><strong>某种意义上可以完成表的复制</strong></em>。<br>如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="number">1</span> USE test;#使用数据库test </span><br><span class="line"> <span class="number">2</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CustNew </span><br><span class="line"> <span class="number">3</span> ( </span><br><span class="line"> <span class="number">4</span> cust_id  <span class="type">char</span>(<span class="number">10</span>)   <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line"> <span class="number">5</span> cust_name  <span class="type">char</span>(<span class="number">50</span>)   <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line"> <span class="number">6</span> cust_address  <span class="type">char</span>(<span class="number">50</span>)  <span class="keyword">NULL</span> , </span><br><span class="line"> <span class="number">7</span> cust_city  <span class="type">char</span>(<span class="number">50</span>)  <span class="keyword">NULL</span> ,</span><br><span class="line"> <span class="number">8</span> cust_state  <span class="type">char</span>(<span class="number">5</span>)  <span class="keyword">NULL</span> , </span><br><span class="line"> <span class="number">9</span> cust_zip  <span class="type">char</span>(<span class="number">10</span>)  <span class="keyword">NULL</span> ,</span><br><span class="line"><span class="number">10</span> cust_country  <span class="type">char</span>(<span class="number">50</span>)  <span class="keyword">NULL</span> ,</span><br><span class="line"><span class="number">11</span> cust_contact  <span class="type">char</span>(<span class="number">50</span>)  <span class="keyword">NULL</span> ,</span><br><span class="line"><span class="number">12</span> cust_email  <span class="type">char</span>(<span class="number">255</span>)  <span class="keyword">NULL</span> </span><br><span class="line"><span class="number">13</span> );#创新新表 </span><br><span class="line"><span class="number">14</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> CustNew</span><br><span class="line"><span class="number">15</span> (</span><br><span class="line"><span class="number">16</span> cust_id,</span><br><span class="line"><span class="number">17</span> cust_name,</span><br><span class="line"><span class="number">18</span> cust_address,</span><br><span class="line"><span class="number">19</span> cust_city,</span><br><span class="line"><span class="number">20</span> cust_state,</span><br><span class="line"><span class="number">21</span> cust_zip,</span><br><span class="line"><span class="number">22</span> cust_country,</span><br><span class="line"><span class="number">23</span> cust_contact,</span><br><span class="line"><span class="number">24</span> cust_email</span><br><span class="line"><span class="number">25</span> )</span><br><span class="line"><span class="number">26</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="number">27</span> cust_id,</span><br><span class="line"><span class="number">28</span> cust_name,</span><br><span class="line"><span class="number">29</span> cust_address,</span><br><span class="line"><span class="number">30</span> cust_city,</span><br><span class="line"><span class="number">31</span> cust_state,</span><br><span class="line"><span class="number">32</span> cust_zip,</span><br><span class="line"><span class="number">33</span> cust_country,</span><br><span class="line"><span class="number">34</span> cust_contact,</span><br><span class="line"><span class="number">35</span> cust_email</span><br><span class="line"><span class="number">36</span> <span class="keyword">FROM</span> customers;#将customers表的数据插入新表<span class="keyword">alter</span></span><br><span class="line"><span class="number">37</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> CustNew;</span><br></pre></td></tr></table></figure>

<p>返回结果如下：<br> <img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-96aaf2720fa79e88.png" alt="结果"></p>
<p> 而如果反过来用，大概就是：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span></span><br><span class="line">customers </span><br><span class="line">（列<span class="number">1</span>，列<span class="number">2</span>，......）</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">列<span class="number">1</span>，列<span class="number">2</span>，.....</span><br><span class="line"><span class="keyword">from</span> custnew</span><br></pre></td></tr></table></figure>

<p>即可完成将表custnew中的数据全部插入customers，这也完成了一条insert插入多条数据。</p>
<p><em><strong>通常，一条INSERT 语句，只能插入一行数据，要插入多行，就必须执行多个INSERT，但是， INSERT SELECT 是个例外。</strong></em></p>
<p>以上方法的复制，实际上是重新在数据库中创建了一个新表。</p>
<p><em><strong>SELECT INTO：</strong></em></p>
<p>这种方法，可以在SQL语句运行中创建一个表，并将一个表复制到这个全新的表。</p>
<p><em><strong>我们可以在实验新的SQL语句前，用其进行复制，这样就不影响到实际数据。</strong></em><br>如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE test;#使用数据库</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Cucopy <span class="keyword">as</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> customers;#复制</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Cucopy;</span><br></pre></td></tr></table></figure>

<p> 返回结果，与上表一致。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-45f6e82846597d13.png" alt="插入"></p>
<h2 id="更新和删除"><a href="#更新和删除" class="headerlink" title="更新和删除"></a>更新和删除</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-c9a8f39f57480ec5.png" alt="更新和删除"></p>
<h2 id="创建和操纵表"><a href="#创建和操纵表" class="headerlink" title="创建和操纵表"></a>创建和操纵表</h2><p>这里中点说一下创建表时，指定默认值的问题。一般来说，创建表时，我们需要指定列的数据类型、是否NULL列。关于NULL值具体说明请看下图。</p>
<p>默认值要是用的好，可以省却我们很多时间。</p>
<p>因其经常用于指定默认日期，这里以日期为例。</p>
<p>首先，在MySQL中内建的日期函数：</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://www.w3school.com.cn/sql/func_now.asp">NOW()</a></td>
<td>返回当前的日期和时间</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_curdate.asp">CURDATE()</a></td>
<td>返回当前的日期</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_curtime.asp">CURTIME()</a></td>
<td>返回当前的时间</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_date.asp">DATE()</a></td>
<td>提取日期或日期/时间表达式的日期部分</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_extract.asp">EXTRACT()</a></td>
<td>返回日期/时间按的单独部分</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_date_add.asp">DATE_ADD()</a></td>
<td>给日期添加指定的时间间隔</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_date_sub.asp">DATE_SUB()</a></td>
<td>从日期减去指定的时间间隔</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_datediff_mysql.asp">DATEDIFF()</a></td>
<td>返回两个日期之间的天数</td>
</tr>
<tr>
<td><a href="http://www.w3school.com.cn/sql/func_date_format.asp">DATE_FORMAT()</a></td>
<td>用不同的格式显示日期/时间</td>
</tr>
</tbody></table>
<p>创建数据库t2,插入表。如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">CREATE</span> DATABASE t2;</span><br><span class="line"> USE t2;</span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test</span><br><span class="line"> (</span><br><span class="line"> id <span class="type">int</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,noedate <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> </span><br><span class="line"> <span class="built_in">current_timestamp</span>()</span><br><span class="line"> );```</span><br><span class="line"></span><br><span class="line">调用如下：</span><br><span class="line"></span><br><span class="line">​```<span class="keyword">SQL</span></span><br><span class="line"> USE t2;</span><br><span class="line"> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> test(id)<span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"> SELET <span class="operator">*</span> <span class="keyword">FROM</span> test;</span><br></pre></td></tr></table></figure>

<p>返回结果：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-06833413f120003a.png" alt="返回结果"></p>
<p>以下SQL不合法：</p>
<ul>
<li><code>time_d time NOT NULL DEFAULT CURTIME(), </code></li>
<li><code>date_e date NOT NULL DEFAULT CURDATE(),</code></li>
<li><code>datetime_f datetime NOT NULL DEFAULT NOW(),</code> </li>
</ul>
<ul>
<li>DATETIME类型：NOW()函数以’YYYY-MM-DD HH:MM:SS’返回当前的日期时间，可以直接存到DATETIME字段中。不支持使用系统默认值。 </li>
<li>DATE类型：CURDATE()以’YYYY-MM-DD’的格式返回今天的日期，可以直接存到DATE字段中。不支持使用系统默认值。 </li>
<li>TIME类型：CURTIME()以’HH:MM:SS’的格式返回当前的时间，可以直接存到TIME字段中。不支持使用系统默认值。<br>常见错误：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dnt_forums</span><br><span class="line">(</span><br><span class="line"> aa <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="string">&#x27;&#x27;</span>), </span><br><span class="line"> bb <span class="type">date</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (getdate()), </span><br><span class="line"> cc <span class="type">char</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="keyword">null</span>) </span><br><span class="line">）；</span><br></pre></td></tr></table></figure>


<ul>
<li>aa 是 int 类型，默认值也得是整型，并且default后边不要（）括号 。</li>
<li>bb date类型不支持使用系统默认值，改成timestamp，能过now()取系统时间 。</li>
<li>cc 已经不允许为空（not null）所以不能默认为 null ，可以改成空字符串 。<br>修改：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dnt_forums</span><br><span class="line">(</span><br><span class="line"> aa <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">2</span>,</span><br><span class="line">bb <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> now(),</span><br><span class="line">cc <span class="type">char</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">); </span><br></pre></td></tr></table></figure>

<p>这个日期问题，依然有很多不太明白的地方，以后学习过程碰到继续解决。<br>主要参考：</p>
<p><a href="http://www.jb51.net/article/33570.htm">脚本之家</a>、<a href="http://blog.csdn.net/justdb/article/details/7965490">博客</a></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-3e42c57a43b77707.png" alt="创建和操纵表"></p>
<p>重命名表：</p>
<p><code>RENAME TABLE cucopy1 TO hi;</code></p>
<p> 删除表：</p>
<p><code>DROP TABLE hi;</code></p>
<blockquote>
<p> <strong>待续</strong></p>
</blockquote>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Data analysis</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlzoo练习答案练习题答案记录</title>
    <url>/2019/03/14/SQL%E7%BB%83%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>这是关于在一个<strong>SQL学习网站的练习题答案记录：<a href="https://sqlzoo.net/wiki/SQL_Tutorial/zh">SQL教程</a></strong></p>
<span id="more"></span>

<h1 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h1><h2 id="由一些简单的查询开始"><a href="#由一些简单的查询开始" class="headerlink" title="由一些简单的查询开始"></a>由一些简单的查询开始</h2><p>这里的默认表格为WORLD表格 。</p>
<table>
<thead>
<tr>
<th>name</th>
<th>continent</th>
<th>area</th>
<th>population</th>
<th>gdp</th>
</tr>
</thead>
<tbody><tr>
<td>Afghanistan</td>
<td>Asia</td>
<td>652230</td>
<td>25500100</td>
<td>20343000000</td>
</tr>
<tr>
<td>Albania</td>
<td>Europe</td>
<td>28748</td>
<td>2831741</td>
<td>12960000000</td>
</tr>
<tr>
<td>Algeria</td>
<td>Africa</td>
<td>2381741</td>
<td>37100000</td>
<td>188681000000</td>
</tr>
<tr>
<td>Andorra</td>
<td>Europe</td>
<td>468</td>
<td>78115</td>
<td>3712000000</td>
</tr>
<tr>
<td>Angola</td>
<td>Africa</td>
<td>1246700</td>
<td>20609294</td>
<td>100990000000</td>
</tr>
<tr>
<td>….</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>name:国家名称   continent:大洲   area:面积    population:人口     gdp:国内生产总值</p>
</blockquote>
<hr>
<p><strong>SQL对大小写不敏感。</strong></p>
<ol>
<li><strong>以显示德国德国的人口。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> population </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;Germany&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>查询面积为5,000,000以上平方公里的国家，对每个国家显示她的名字和人均国内生产总值。</strong>（<code>gdp/population</code>）</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, gdp<span class="operator">/</span>population </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> area <span class="operator">&gt;</span> <span class="number">5000000</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><strong>查询“Ireland 爱尔兰”,“Iceland 冰岛”,“Denmark 丹麦”的国家名称和人口。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, population </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">IN</span> (<span class="string">&#x27;Ireland&#x27;</span>, <span class="string">&#x27;Iceland&#x27;</span>, <span class="string">&#x27;Denmark&#x27;</span>);<span class="comment">--IN 操作符允许我们在 WHERE 子句中规定多个值</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li><strong>面积为200,000及250,000之间的国家名称和该国面积。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, area </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> area </span><br><span class="line"><span class="keyword">BETWEEN</span> <span class="number">200000</span> <span class="keyword">AND</span> <span class="number">250000</span>;</span><br><span class="line"><span class="comment">--操作符 BETWEEN ... AND 会选取介于两个值之间的数据范围。这些值可以是数值、文本或者日期。</span></span><br></pre></td></tr></table></figure>

<h2 id="SELECT国家名字"><a href="#SELECT国家名字" class="headerlink" title="SELECT国家名字"></a>SELECT国家名字</h2><table>
<thead>
<tr>
<th>name</th>
<th>continent</th>
</tr>
</thead>
<tbody><tr>
<td>Afghanistan</td>
<td>Asia</td>
</tr>
<tr>
<td>Albania</td>
<td>Europe</td>
</tr>
<tr>
<td>Algeria</td>
<td>Africa</td>
</tr>
<tr>
<td>Andorra</td>
<td>Europe</td>
</tr>
<tr>
<td>Angola</td>
<td>Africa</td>
</tr>
<tr>
<td>….</td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>name:国家名称    continent:大洲</p>
</blockquote>
<hr>
<p><strong>SQL 通配符</strong></p>
<p>在搜索数据库中的数据时，SQL 通配符可以替代一个或多个字符。</p>
<p>SQL 通配符必须与 LIKE 运算符一起使用。</p>
<p>在 SQL 中，可使用以下通配符：</p>
<table>
<thead>
<tr>
<th>通配符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>%</td>
<td>替代一个或多个字符</td>
</tr>
<tr>
<td>_</td>
<td>仅替代一个字符</td>
</tr>
<tr>
<td>[charlist]</td>
<td>字符列中的任何单一字符</td>
</tr>
<tr>
<td>[^charlist]或者[!charlist]</td>
<td>不在字符列中的任何单一字符</td>
</tr>
</tbody></table>
<hr>
<ol>
<li><strong>找出以Y为开首的国家</strong>。</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;Y%&#x27;</span></span><br><span class="line"><span class="comment">--LIKE 操作符用于在 WHERE 子句中搜索列中的指定模式。</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>找出以Y为结尾的国家。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%Y&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><strong>找出包含字母x的所有国家。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;%x%&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li><strong>找出名字以land结尾的所有国家。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;%land&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li><strong>查找以C开头，ia结尾的所有国家。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;C%ia&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li><strong>找出名字包含双oo的国家</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;%oo%&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li><strong>找出名字包含三个或三个以上a的国家</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;%a%a%a%&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li><strong>找出名字第二个字母为t的国家</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;_t%&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> name</span><br></pre></td></tr></table></figure>

<ol start="9">
<li><strong>找出所有国家,其名字都有两个字母 o,被另外两个字母相隔着。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;%o__o%&#x27;</span></span><br></pre></td></tr></table></figure>

<p>10 . <strong>找出名字是4个字母的国家。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name </span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;____&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="11">
<li><strong>找出首都和国家名字相同的国家。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> capital; <span class="comment">--可以加空格</span></span><br></pre></td></tr></table></figure>

<ol start="12">
<li><strong>“Mexico 墨西哥”的首都是”Mexico City”。找出所有国家名字,其首都是国家名字加上”City”。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> capital <span class="operator">=</span> concat(name,<span class="string">&#x27; City&#x27;</span>);<span class="comment">--注意City前面的空格</span></span><br></pre></td></tr></table></figure>

<ol start="13">
<li><strong>找出所有首都和其国家名字,而首都要有国家名字中出現。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> capital,name</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> capital </span><br><span class="line"><span class="keyword">LIKE</span> concat(<span class="string">&#x27;%&#x27;</span>,name,<span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="14">
<li><strong>找出所有首都和其国家名字,而首都是国家名字的延伸。</strong></li>
</ol>
<p>   <strong>你愿显示 Mexico City,因它比其国家名字 Mexico 長。</strong><br>   <strong>你不愿显示 Luxembourg,因它的首都和国家名相是相同的。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,capital</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> capital </span><br><span class="line"><span class="keyword">LIKE</span> concat(name,<span class="string">&#x27;%&#x27;</span>)  <span class="comment">--注意审题，国家名字的延伸，那么国家名字应该在最前面。</span></span><br><span class="line"><span class="keyword">AND</span> capital <span class="operator">!=</span> name;<span class="comment">--这里也可以用&quot;&lt;&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="15">
<li><p><strong>“Monaco-Ville”是合併國家名字 “Monaco” 和延伸詞”-Ville”.</strong></p>
<p><strong>顯示國家名字，及其延伸詞，如首都是國家名字的延伸。</strong></p>
<p><strong>你可以使用SQL函數 <a href="https://sqlzoo.net/wiki/REPLACE">REPLACE</a> 或 MID。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,replace(capital, name, <span class="string">&#x27;&#x27;</span>) </span><br><span class="line"><span class="keyword">FROM</span> world </span><br><span class="line"><span class="keyword">WHERE</span> capital </span><br><span class="line"><span class="keyword">LIKE</span> concat(name,<span class="string">&#x27;%_&#x27;</span>)</span><br><span class="line"><span class="comment">/*replace函数定义</span></span><br><span class="line"><span class="comment">replace(original-string，search-string，replace-string)</span></span><br><span class="line"><span class="comment">original-string： 被搜索的字符串。可为任意长度。</span></span><br><span class="line"><span class="comment">search-string： 要搜索并被 replace-string 替换的字符串。该字符串的长度不应超过 255 个字节。如果 search-string 是空字符串，则按原样返回原始字符串。</span></span><br><span class="line"><span class="comment">replace-string： 该字符串用于替换 search-string。可为任意长度。如果 replacement-string 是空字符串，则删除出现的所有 search-string。</span></span><br><span class="line"><span class="comment">说明</span></span><br><span class="line"><span class="comment">用字符串表达式3替换字符串表达式1中出现的所有字符串表达式2的匹配项。返回新的字符串。</span></span><br><span class="line"><span class="comment">如果有某个参数为 NULL，此函数返回 NULL。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="SQLZOO练习题之SELECT-from-WORLD-Tutorial-zh"><a href="#SQLZOO练习题之SELECT-from-WORLD-Tutorial-zh" class="headerlink" title="SQLZOO练习题之SELECT from WORLD Tutorial/zh"></a>SQLZOO练习题之SELECT from WORLD Tutorial/zh</h2><p><strong>查询世界</strong></p>
<hr>
<table>
<thead>
<tr>
<th>name</th>
<th>continent</th>
<th>area</th>
<th>population</th>
<th>gdp</th>
</tr>
</thead>
<tbody><tr>
<td>Afghanistan</td>
<td>Asia</td>
<td>652230</td>
<td>25500100</td>
<td>20343000000</td>
</tr>
<tr>
<td>Albania</td>
<td>Europe</td>
<td>28748</td>
<td>2831741</td>
<td>12960000000</td>
</tr>
<tr>
<td>Algeria</td>
<td>Africa</td>
<td>2381741</td>
<td>37100000</td>
<td>188681000000</td>
</tr>
<tr>
<td>Andorra</td>
<td>Europe</td>
<td>468</td>
<td>78115</td>
<td>3712000000</td>
</tr>
<tr>
<td>Angola</td>
<td>Africa</td>
<td>1246700</td>
<td>20609294</td>
<td>100990000000</td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>name:国家名称    continent:大洲    area:面积    population:人口    gdp:国内生产总值</p>
<p>**<a href="https://sqlzoo.net/wiki/Read_the_notes_about_this_table.">表格说明</a> **</p>
</blockquote>
<hr>
<ol>
<li>*<em>查询大于2亿人口的国家。</em></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name </span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> population<span class="operator">&gt;</span><span class="number">200000000</span>;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>查询大于2亿人口的国家，及国内生产总值</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,gdp<span class="operator">/</span>population</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> population <span class="operator">&gt;</span> <span class="number">200000000</span>;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><strong>查询在South America南美洲的国际爱和以百万为单位的人口數</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,population <span class="operator">/</span> <span class="number">1000000</span></span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;South America&#x27;</span>;<span class="comment">--别忘记单引号，代表字符串</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li><strong>查询法国，德国，意大利(France, Germany, Italy)的国家名称和人口</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,population</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">in</span> (<span class="string">&#x27;France&#x27;</span>, <span class="string">&#x27;Germany&#x27;</span>, <span class="string">&#x27;Italy&#x27;</span>)<span class="comment">--别忘记单引号，代表字符串</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li><strong>查询包含单词“United”的国家</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name</span><br><span class="line"><span class="keyword">LIKE</span> <span class="string">&#x27;%United%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li><strong>查询大国（面积大于300万平方公里或者人口大于2.5亿）的名字，面积，人口</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,population,area</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> area <span class="operator">&gt;</span> <span class="number">3000000</span> </span><br><span class="line"><span class="keyword">OR</span> population <span class="operator">&gt;</span> <span class="number">250000000</span>;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li><p><strong>美国，印度，中国(USA, India, China)是人口又大，同时面积又大的國家。排除这些国家。</strong></p>
<p><strong>顯示以人口或面积为大国的國家，但不能同时面积大且人口多的国家名称，人口，面积。</strong></p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,population,area</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> (area <span class="operator">&gt;</span> <span class="number">3000000</span> <span class="keyword">AND</span> population <span class="operator">&lt;</span> <span class="number">250000000</span>)</span><br><span class="line"><span class="keyword">OR</span> (area <span class="operator">&lt;</span> <span class="number">3000000</span> <span class="keyword">AND</span> population <span class="operator">&gt;</span> <span class="number">250000000</span>);</span><br></pre></td></tr></table></figure>

<ol start="8">
<li><strong>查询并显示南美洲国家以百万计人口和10亿计gdp（保留小数点2位）。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,ROUND(population<span class="operator">/</span><span class="number">1000000</span>,<span class="number">2</span>),ROUND(gdp<span class="operator">/</span><span class="number">1000000000</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> continent <span class="operator">=</span> <span class="string">&#x27;South America&#x27;</span>;</span><br><span class="line"><span class="comment">/*ROUND 函数用于把数值字段舍入为指定的小数位数。</span></span><br><span class="line"><span class="comment">SELECT ROUND(column_name,要保留的位数) FROM table_name*/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="http://www.w3school.com.cn/sql/sql_func_round.asp"><strong>ROUND() 函数</strong></a></p>
</blockquote>
<ol start="9">
<li><strong>查询万亿元国内生产总值国家的人均国内生产总值，四捨五入到最近的$ 1000。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,ROUND(gdp<span class="operator">/</span>population,<span class="number">-3</span>)</span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> gdp <span class="operator">&gt;</span> <span class="number">1000000000000</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>继续使用round函数。因为留一位小数1，不留小数是0，-1就好比153不留3，直接四舍五入150，同样-2就是153，不留53，直接四舍五入200。</p>
</blockquote>
<ol start="10">
<li><strong>对于以N开头的国家，请显示名称 - 但用澳大拉西亚代替大洋洲。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, </span><br><span class="line">       <span class="keyword">CASE</span> <span class="keyword">WHEN</span> continent<span class="operator">=</span><span class="string">&#x27;Oceania&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;Australasia&#x27;</span>  <span class="keyword">ELSE</span> continent <span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;N%&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这里用到了<code>case</code>函数首先要注意<code>case</code>函数和<code>name</code>之间，需要有一个逗号。</p>
<blockquote>
<p><strong><a href="https://www.jianshu.com/p/cbb05073931f">SQL Case when 的使用方法</a>:</strong></p>
<p>Case具有两种格式：简单Case函数和Case搜索函数。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*简单Case函数*/</span></span><br><span class="line"><span class="keyword">CASE</span> sex</span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">&#x27;2&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27;其他&#x27;</span> <span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Case搜索函数*/</span></span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> sex <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> sex <span class="operator">=</span> <span class="string">&#x27;2&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27;其他&#x27;</span> <span class="keyword">END</span></span><br></pre></td></tr></table></figure>

<p>这两种方式，可以实现相同的功能。简单Case函数的写法相对比较简洁，但是和Case搜索函数相比，功能方面会有些限制，比如写判断式。<br>还有一个需要注意的问题，Case函数只返回第一个符合条件的值，剩下的Case部分将会被自动忽略。</p>
</blockquote>
<ol start="11">
<li><strong>查找国家和大洲，但是用Eurasia代替Europe和Asia; 用America代替在 North America 或者South America或者Caribbean的国家. 且国家名字要以A或者B开头。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,</span><br><span class="line">      <span class="keyword">CASE</span> <span class="keyword">WHEN</span> continent <span class="operator">=</span> <span class="string">&#x27;Europe&#x27;</span> <span class="keyword">THEN</span>  <span class="string">&#x27;Eurasia&#x27;</span>  </span><br><span class="line">           <span class="keyword">WHEN</span> continent <span class="operator">=</span> <span class="string">&#x27;Asia&#x27;</span> <span class="keyword">THEN</span>  <span class="string">&#x27;Eurasia&#x27;</span></span><br><span class="line">           <span class="keyword">WHEN</span>  continent <span class="keyword">in</span> (<span class="string">&#x27;North America&#x27;</span>,<span class="string">&#x27;South America&#x27;</span>,<span class="string">&#x27;Caribbean&#x27;</span>) <span class="keyword">THEN</span> <span class="string">&#x27;America&#x27;</span></span><br><span class="line">           <span class="keyword">ELSE</span> continent <span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">WHERE</span> name  <span class="keyword">LIKE</span> <span class="string">&#x27;A%&#x27;</span>  <span class="keyword">OR</span>   name  <span class="keyword">LIKE</span>  <span class="string">&#x27;B%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ol start="12">
<li><p><strong>Put the continents right…</strong></p>
<ul>
<li><strong>Oceania becomes Australasia</strong></li>
<li><strong>Countries in Eurasia and Turkey go to Europe/Asia</strong></li>
<li><strong>Caribbean islands starting with ‘B’ go to North America, other Caribbean islands go to South America</strong></li>
</ul>
<p><strong>Show the name, the original continent and the new continent of all countries.</strong></p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, continent, </span><br><span class="line">		<span class="keyword">CASE</span> </span><br><span class="line">		<span class="keyword">WHEN</span> continent <span class="operator">=</span> <span class="string">&#x27;Oceania&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;Australasia&#x27;</span></span><br><span class="line">		<span class="keyword">WHEN</span> continent <span class="keyword">IN</span> (<span class="string">&#x27;Eurasia&#x27;</span>, <span class="string">&#x27;Turkey&#x27;</span>) <span class="keyword">THEN</span> <span class="string">&#x27;Europe/Asia&#x27;</span></span><br><span class="line">		<span class="keyword">WHEN</span> continent <span class="operator">=</span> <span class="string">&#x27;Caribbean&#x27;</span> <span class="keyword">AND</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;B%&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;North America&#x27;</span></span><br><span class="line">		<span class="keyword">WHEN</span> continent <span class="operator">=</span> <span class="string">&#x27;Caribbean&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;South America&#x27;</span></span><br><span class="line">		<span class="keyword">ELSE</span> continent <span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span> world</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> name;</span><br></pre></td></tr></table></figure>

<h2 id="查询诺贝尔奖"><a href="#查询诺贝尔奖" class="headerlink" title="查询诺贝尔奖"></a>查询诺贝尔奖</h2><ol>
<li><strong>查询1950年诺贝尔奖的所有资料。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> yr, subject, winner</span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> yr <span class="operator">=</span> <span class="number">1950</span>;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>查询1962年谁获得了诺贝尔文学奖(Literature)。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> winner</span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> yr <span class="operator">=</span> <span class="number">1962</span>  <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;Literature&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><strong>查询爱因斯坦”(‘Albert Einstein’) 的获奖年份和奖项</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> yr,subject</span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> winner <span class="operator">=</span> <span class="string">&#x27;Albert Einstein&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><strong>查询2000年及以后的诺贝尔奖和平奖（Peace）获得者</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> winner</span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> yr <span class="operator">&gt;=</span> <span class="number">2000</span> <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;Peace&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><strong>查询1980到1989（包含首尾）的诺贝尔文学奖获得者的所有资料</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> yr,subject,winner</span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> (yr <span class="operator">&gt;=</span> <span class="number">1980</span> <span class="keyword">AND</span> yr <span class="operator">&lt;=</span><span class="number">1989</span>) <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;Literature&#x27;</span>;	</span><br></pre></td></tr></table></figure>

<ol start="6">
<li><strong>查询总统获得者的所有细节–Theodore Roosevelt；Woodrow Wilson； Jimmy Carter；</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> winner <span class="keyword">IN</span> (<span class="string">&#x27;Theodore Roosevelt&#x27;</span>,</span><br><span class="line">                  <span class="string">&#x27;Woodrow Wilson&#x27;</span>,</span><br><span class="line">                  <span class="string">&#x27;Jimmy Carter&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="7">
<li><strong>顯示名字為John 的得獎者。 (注意:外國人名字(First name)在前，姓氏(Last name)在後)</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> winner</span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> winner <span class="keyword">LIKE</span> <span class="string">&#x27;John%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ol start="8">
<li><strong>顯示1980年物理學(physics)獲獎者，及1984年化學獎(chemistry)獲得者</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span>   (yr <span class="operator">=</span> <span class="number">1980</span> <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;physics&#x27;</span>) </span><br><span class="line">		<span class="keyword">OR</span> </span><br><span class="line">		(yr <span class="operator">=</span> <span class="number">1984</span> <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;chemistry&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ol start="9">
<li><strong>查看1980年獲獎者，但不包括化學獎(Chemistry)和醫學獎(Medicine)</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span>   yr <span class="operator">=</span> <span class="number">1980</span> </span><br><span class="line">		<span class="keyword">AND</span> </span><br><span class="line">		subject <span class="keyword">NOT</span> <span class="keyword">IN</span>  (<span class="string">&#x27;Chemistry&#x27;</span>,<span class="string">&#x27;Medicine&#x27;</span>);</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>运算符</th>
<th>语法</th>
</tr>
</thead>
<tbody><tr>
<td>SQL <strong>IN</strong>运算符的语法</td>
<td>SELECT column_name1，column_name2等 FROM table_name  WHERE column_name1 IN（value1，value2，etc）;</td>
</tr>
<tr>
<td>SQL <strong>NOT IN</strong>运算符的语法</td>
<td>SELECT column_name1，column_name2等 FROM table_name  WHERE column_name1 NOT IN（value1，value2，etc）;</td>
</tr>
</tbody></table>
<ol start="10">
<li><strong>顯示早期的醫學獎(Medicine)得獎者（1910之前，不包括1910），及近年文學獎(Literature)得獎者（2004年以後，包括2004年）。</strong></li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> nobel</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">(yr <span class="operator">&lt;</span> <span class="number">1910</span> <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;Medicine&#x27;</span>)</span><br><span class="line"><span class="keyword">OR</span></span><br><span class="line">(yr <span class="operator">&gt;=</span> <span class="number">2004</span> <span class="keyword">AND</span> subject <span class="operator">=</span> <span class="string">&#x27;Literature&#x27;</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Data analysis</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-next</title>
    <url>/2021/06/06/hexo-next/</url>
    <content><![CDATA[<p><strong>安装–美化–问题集锦</strong></p>
<p>网上的教程多试7.0版本以下的，因为7.0版本已经继承了很多插件功能，因此我尝试按照别人的教程试一次，报错，而且还是查不到原因的报错，没办法了，只能自己阅读配置文件的注释，自行更改。在此，记录一下。</p>
<span id="more"></span>

<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><h2 id="hexo命令报错"><a href="#hexo命令报错" class="headerlink" title="hexo命令报错"></a>hexo命令报错</h2><figure class="highlight plaintext"><figcaption><span>Cannot find module 'hexo' from 'F:\Hexoblog'</span></figcaption><table><tr><td class="code"><pre><span class="line">ERROR Cannot find module &#x27;hexo&#x27; from &#x27;F:\Hexoblog&#x27;</span><br><span class="line">ERROR Local hexo loading failed in F:\Hexoblog</span><br><span class="line">ERROR Try running: &#x27;rm -rf node_modules &amp;&amp; npm install --force&#x27;</span><br></pre></td></tr></table></figure>

<p>研究发现，是环境变量的问题，需要将hexo加入环境变量，其一般路径为</p>
<p><code>F:\Hexoblog\node_modules\.bin</code>注意后面的.bin；</p>
<p>开始我是全局安装，但是一直不知道那里出来问题，后来干脆全部卸载</p>
<p>然后在f盘打开cmd，进行安装，</p>
<figure class="highlight plaintext"><figcaption><span>uninstall -g hexo-cli</span></figcaption><table><tr><td class="code"><pre><span class="line">npm uninstall -g hexo-cli</span><br><span class="line"></span><br><span class="line">npm install hexo-cli</span><br></pre></td></tr></table></figure>

<p>最后将<code>F:\Hexoblog\node_modules\.bin</code>加入环境变量，解决！</p>
<h2 id="hexo-deploy时出现的警告：LF-will-be-replaced-by-CRLF"><a href="#hexo-deploy时出现的警告：LF-will-be-replaced-by-CRLF" class="headerlink" title="hexo deploy时出现的警告：LF will be replaced by CRLF"></a>hexo deploy时出现的警告：LF will be replaced by CRLF</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> core.autocrlf <span class="literal">false</span> <span class="comment">//禁用自动转换</span></span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://www.jianshu.com/p/783f7736e77e">dev_winner</a></p>
<h2 id="NexT-v6-0-背景动画Canvas-nest设置无效的解决方案"><a href="#NexT-v6-0-背景动画Canvas-nest设置无效的解决方案" class="headerlink" title="NexT v6.0+ 背景动画Canvas_nest设置无效的解决方案"></a>NexT v6.0+ 背景动画Canvas_nest设置无效的解决方案</h2><p><a href="https://blog.csdn.net/weixin_39345384/article/details/80544660">NexT v6.0+ 背景动画Canvas_nest设置无效的解决方案</a></p>
<h2 id="hexo-g报错"><a href="#hexo-g报错" class="headerlink" title="hexo g报错"></a><code>hexo g</code>报错</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR Process failed: _posts/hexo-next.md</span><br><span class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1:</span><br></pre></td></tr></table></figure>

<p><strong>解决方案：</strong><a href="https://segmentfault.com/q/1010000009341531">查看新建要上传地md文件，tags或者其他，与后面内容是不是有一个空格。</a> </p>
<h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><h2 id="文章末尾添加版权说明"><a href="#文章末尾添加版权说明" class="headerlink" title="文章末尾添加版权说明"></a>文章末尾添加版权说明</h2><p>版权声明默认使用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a> 许可协议，可以根据自身需要修改 <code>licence</code> 字段变更协议。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false#此处改成true，会在侧边显示</span><br><span class="line">  post: true #文章底部显示</span><br><span class="line">  language: zh-CN#语言</span><br></pre></td></tr></table></figure>

<h2 id="实现Follow-me-on-GitHub"><a href="#实现Follow-me-on-GitHub" class="headerlink" title="实现Follow me on GitHub"></a>实现Follow me on GitHub</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#next主题配置文件</span><br><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/wangshixiong</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>

<h2 id="阅读次数统计"><a href="#阅读次数统计" class="headerlink" title="阅读次数统计"></a>阅读次数统计</h2><p>首先，注册<a href="https://leancloud.cn/">LeanCloud</a>账号，注册方法如下：</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/leanhexo.jpg" alt="leancloud"></p>
<p><strong>创建<code>class</code></strong></p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/leanhexo1.jpg" alt="创建class"></p>
<p><strong>最后就可以拿到相关的ID和key；</strong></p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/leanhexo3.jpg" alt="ID"></p>
<p><code>Valine</code>同时支持阅读次数统计和评论相关功能；打开，并将ID和key输入即可；</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/%E8%AF%84%E8%AE%BAhexo.jpg" alt="valine配置"></p>
<h2 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h2><p>Next 支持多款评论系统：</p>
<ul>
<li><a href="https://disqus.com/">Disqus</a>：欧美 UI 风格，支持 Tweet、Facebook 等国外社交软件的三方登陆和一键分享。 <a href="https://blog.disqus.com/disqus-welcomes-the-spruce">Demo</a></li>
<li><a href="https://github.com/imsun/gitment">gitment</a>：必须用 github 账号登陆才能评论，支持 Markdown 语法，与 github issues 页面风格一致 <a href="https://imsun.github.io/gitment/">Demo</a></li>
<li><a href="https://valine.js.org/">Valine</a>：支持匿名评论，支持 Markdown 语法，界面简洁美观</li>
<li><a href="http://changyan.kuaizhan.com/">畅言</a>：国产评论系统，可区分热评和最新评论，论坛贴吧风</li>
<li><a href="https://www.livere.com/">来必力</a>：支持插入图片和 GIF，支持国内外多种社交媒体的三方登陆 <a href="https://www.livere.com/city-demo">Demo</a></li>
</ul>
<p>博客的评论系统不需要太过复杂的功能，我的要求是一定要轻量级，足够简洁美观，并且支持 Markdown 语法，首选 Valine 和 gitment，这两个评论系统都是由国内个人开发的，在此向开发者致敬。</p>
<h3 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h3><p><strong>记录在NexT主题中添加gitalk评论系统的步骤。</strong></p>
<p>gitalk：一个基于 Github Issue 和 Preact 开发的评论插件<br>详情Demo可见：<a href="https://gitalk.github.io/">https://gitalk.github.io/</a></p>
<p><strong>1. Register Application</strong></p>
<p>在GitHub上注册新应用，<a href="https://github.com/settings/applications/new">链接</a></p>
<p><strong>2. 参数说明：</strong><br><code>Application name： # 应用名称，随意</code><br><code>Homepage URL： # 网站URL，如</code><a href="https://asdfv1929.github.io/">https://asdfv1929.github.io</a><br><code>Application description</code> # 描述，随意<br><code>Authorization callback URL：# 网站URL，</code><a href="https://asdfv1929.github.io`/">https://asdfv1929.github.io`</a></p>
<p><strong>3.<code>Client ID</code>和<code>Client Secret</code>在后面的配置中需要用到，到时复制粘贴即可。</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID: github帐号  # 例：asdfv1929   </span><br><span class="line">  repo: 仓库名称   # 例：asdfv1929.github.io</span><br><span class="line">  ClientID: Client ID</span><br><span class="line">  ClientSecret: Client Secret</span><br><span class="line">  adminUser: github帐号 #指定可初始化评论账户</span><br><span class="line">  distractionFreeMode: true</span><br></pre></td></tr></table></figure>

<p><a href="https://asdfv1929.github.io/2018/01/20/gitalk/">Hexo NexT主题中集成gitalk评论系统</a></p>
<p><a href="https://liujunzhou.top/2018/8/10/gitalk-error/#%E4%BD%BF%E7%94%A8Github%E8%B4%A6%E6%88%B7%E7%99%BB%E9%99%86%E8%AF%84%E8%AE%BA%E5%8C%BA%E6%97%B6%E4%BC%9A%E8%BF%94%E5%9B%9E%E9%A6%96%E9%A1%B5%E6%88%96%E8%80%85404%E6%8A%A5%E9%94%99">Hexo NexT使用Gitalk未找到相关的Issues进行评论Error:Validation Failed</a></p>
<h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h3><p>Next 已经内置了 Valine 组件，在主题配置文件中开启评论功能即可，同时，由于 Valine 是基于 Leancloud 提供后端服务的，所以需要填写 LeanCloud 的 App ID 和 App Key。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">themes\next\_config.yml</span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:  ***&lt;app_id***</span><br><span class="line">  appkey: ***&lt;app_key&gt;***</span><br><span class="line">  notify: false  # 收到新评论是否邮件通知</span><br><span class="line">  verify: false  # 是否开启验证码</span><br><span class="line">  placeholder:  # 默认填充文字</span><br><span class="line">  avatar: mm  # 设置默认评论列表</span><br><span class="line">  guest_info: nick,mail  # 评论区头部表单</span><br><span class="line">  pageSize: 10  # 每页评论数</span><br><span class="line">  visitor: true  # 同时开启文章阅读次数统计</span><br></pre></td></tr></table></figure>

<p>详细参考文献：<a href="http://yearito.cn/posts/hexo-advanced-settings.html">yearito</a></p>
<h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#next配置文件</span><br><span class="line"># Code Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: normal#这里更改，共有5种。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h2><p>先安装插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>然后在next配置文件中找到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true#改为true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br></pre></td></tr></table></figure>

<h2 id="站点运行时间"><a href="#站点运行时间" class="headerlink" title="站点运行时间"></a>站点运行时间</h2><p><strong>在站点底部显示站点已运行时间。</strong></p>
<p>修改<code>thems\next\layout\_custom\custom.swig</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;# 页脚站点运行时间统计 #&#125;</span><br><span class="line">&#123;% if theme.footer.ages.enable %&#125;</span><br><span class="line">  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/moment@2.22.2/moment.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/moment-precise-range-plugin@1.3.0/moment-precise-range.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    function timer() &#123;</span><br><span class="line">      var ages = moment.preciseDiff(moment(),moment(&#123;&#123; theme.footer.ages.birthday &#125;&#125;,&quot;YYYYMMDD&quot;));</span><br><span class="line">      ages = ages.replace(/years?/, &quot;年&quot;);</span><br><span class="line">      ages = ages.replace(/months?/, &quot;月&quot;);</span><br><span class="line">      ages = ages.replace(/days?/, &quot;天&quot;);</span><br><span class="line">      ages = ages.replace(/hours?/, &quot;小时&quot;);</span><br><span class="line">      ages = ages.replace(/minutes?/, &quot;分&quot;);</span><br><span class="line">      ages = ages.replace(/seconds?/, &quot;秒&quot;);</span><br><span class="line">      ages = ages.replace(/\d+/g, &#x27;&lt;span style=&quot;color:&#123;&#123; theme.footer.ages.color &#125;&#125;&quot;&gt;$&amp;&lt;/span&gt;&#x27;);</span><br><span class="line">      div.innerHTML = `&#123;&#123; __(&#x27;footer.age&#x27;)&#125;&#125; $&#123;ages&#125;`;</span><br><span class="line">    &#125;</span><br><span class="line">    var div = document.createElement(&quot;div&quot;);</span><br><span class="line">    //插入到copyright之后</span><br><span class="line">    var copyright = document.querySelector(&quot;.copyright&quot;);</span><br><span class="line">    document.querySelector(&quot;.footer-inner&quot;).insertBefore(div, copyright.nextSibling);</span><br><span class="line">    timer();</span><br><span class="line">    setInterval(&quot;timer()&quot;,1000)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>如果 custom.swig 文件不存在，需要新建一个，并且需要手动新建并在布局页面中<code>themes\next\layout\_layout.swig</code>末尾引入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     ...</span><br><span class="line">      &#123;% include &#x27;_third-party/exturl.swig&#x27; %&#125;</span><br><span class="line">      &#123;% include &#x27;_third-party/bookmark.swig&#x27; %&#125;</span><br><span class="line">      &#123;% include &#x27;_third-party/copy-code.swig&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">+     &#123;% include &#x27;_custom/custom.swig&#x27; %&#125;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>修改主题配置文件<code>themes\next\_config.yml</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  footer:</span><br><span class="line">    ...</span><br><span class="line">+   ages:</span><br><span class="line">+     # site running time</span><br><span class="line">+     enable: true</span><br><span class="line">+     # birthday of your site</span><br><span class="line">+     birthday: 20181001#这里的birthday要根据你的时间自行更改。</span><br><span class="line">+     # color of number</span><br><span class="line">+     color: &quot;#1890ff&quot;</span><br></pre></td></tr></table></figure>

<p>然后补全对应文案`themes\next\languages\zh-Hans.yml：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  footer:</span><br><span class="line">    powered: &quot;由 %s 强力驱动&quot;</span><br><span class="line">    theme: 主题</span><br><span class="line">+   age: 我已在此等候你</span><br></pre></td></tr></table></figure>

<p>刷新浏览器即可生效。</p>
<p>日期统计计算功能由 <a href="https://momentjs.com/">moment</a> 和 <a href="https://github.com/codebox/moment-precise-range">moment-precise-range</a> 提供，也可用原生 JS Date 对象来实现。</p>
<h1 id="文章永久链接配置"><a href="#文章永久链接配置" class="headerlink" title="文章永久链接配置"></a>文章永久链接配置</h1><p>站点配置文件<code>_config.yml</code> 中修改为：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">url: http:<span class="comment">//www.wenhuateng.top/ #站点域名</span></span><br><span class="line">permalink: :year/:month/:day/:title/ </span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> # Set to <span class="literal">false</span> to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: <span class="literal">true</span> # Set to <span class="literal">false</span> to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure>



<h2 id="安装及卸载hexo插件"><a href="#安装及卸载hexo插件" class="headerlink" title="安装及卸载hexo插件"></a>安装及卸载hexo插件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo安装xxx插件</span><br><span class="line"></span><br><span class="line">npm install xxx –save</span><br><span class="line"></span><br><span class="line">hexo卸载xxx插件</span><br><span class="line"></span><br><span class="line">npm uninstall xxx</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="部署至Github"><a href="#部署至Github" class="headerlink" title="部署至Github"></a>部署至Github</h1><h2 id="阿里云域名解析"><a href="#阿里云域名解析" class="headerlink" title="阿里云域名解析"></a>阿里云域名解析</h2><p>首先，需要添加两条域名解析，解析的地址是你在Github所创建的分支连接；</p>
<p><strong>第一条：</strong></p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D1.jpg" alt="解析1"></p>
<p><strong>第二条：</strong></p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D2.jpg" alt="解析2"></p>
<p>最终生成两条：</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D3.jpg" alt="解析3"></p>
<h2 id="github配置"><a href="#github配置" class="headerlink" title="github配置"></a>github配置</h2><p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/github%E8%A7%A3%E6%9E%90.png" alt="github"></p>
<h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><p>在命令行（<code>Gitbash</code>）输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Github上你注册的邮箱地址&quot;</span><br></pre></td></tr></table></figure>

<p>冒号后边就输入空格，<code>y/n </code>输入<code>y </code></p>
<p>输入共计三次回车，即可得到秘钥；</p>
<p>一般而言，秘钥本地地址为：<code>C:\Users\admin\.ssh</code></p>
<p>用文本编辑器打开，并复制所有内容，打开<code>GitHub 点击Setting  ---&gt; SSH and GPG keys  ---&gt; New SSHkey</code></p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/ssh3.jpg"></p>
<p><strong>保存即可；</strong></p>
<h2 id="修改本地配置文件"><a href="#修改本地配置文件" class="headerlink" title="修改本地配置文件"></a>修改本地配置文件</h2><p>修改hexo配置文件**_config.yml**，在最后添加以下内容：</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%9C%B0%E5%9D%80.jpg" alt="本地地址"></p>
<p>最后在本地Hexo里的文件，找到source文件夹，在里面先创建个文本文档，输入你购买的域名，保存后重命名为CNAME，去掉后缀。</p>
<p>内容为你的阿里云域名；</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/hexo/CNME.jpg" alt="CNAME"></p>
<p>参考：</p>
<p><a href="https://www.cxyzjd.com/article/qq_38148394/79998012">使用github-hexo-域名绑定（阿里云）搭建个人博客_狍子的情书的博客-程序员宅基地</a></p>
<p>[<a href="https://segmentfault.com/a/1190000021979631">超级详细Hexo+GitHub+阿里云域名的博客搭建教程</a></p>
<h1 id="使用阿里云oss自动存储图片"><a href="#使用阿里云oss自动存储图片" class="headerlink" title="使用阿里云oss自动存储图片"></a>使用阿里云oss自动存储图片</h1><blockquote>
<p><strong>本篇主要参考</strong></p>
<p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E6%A6%82%E8%BF%B0">Picgo使用手册</a></p>
<p><a href="https://dlonng.com/posts/ailyun-oss">阿里云 OSS + PicGo 博客图床超详细配置教程！</a></p>
</blockquote>
<h2 id="Picgo下载及安装"><a href="#Picgo下载及安装" class="headerlink" title="Picgo下载及安装"></a>Picgo下载及安装</h2><ol>
<li><p>打开官网，点击此处：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211109224213319.png" alt="打开应用"></p>
</li>
<li><p>点击<code>latest</code></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211109224346499.png" alt="image-20211109224346499"></p>
</li>
<li><p>下拉页面，点击.exe文件开始下载；</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211109224512835.png" alt="image-20211109224512835"></p>
</li>
</ol>
<h2 id="踩的坑"><a href="#踩的坑" class="headerlink" title="踩的坑"></a>踩的坑</h2><p>按照相关教程配置后一直报错，后发现是因为阿里云的存储地址配置错误导致；报错：<code>requesterror： getaddrinfo</code></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84.png" alt="image-20211109225005210"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;accessKeyId&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;accessKeySecret&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;bucket&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="comment">// 存储空间名</span></span><br><span class="line">  <span class="attr">&quot;area&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="comment">// 存储区域代号</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="comment">// 自定义存储路径</span></span><br><span class="line">  <span class="attr">&quot;customUrl&quot;</span>: <span class="string">&quot;&quot;</span> <span class="comment">// 自定义域名，注意要加http://或者https://</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211109225142860.png" alt="image-20211109225142860"></p>
<p>点击你所创建的bucket，进入后，点击左侧概览：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211109225408298.png" alt="image-20211109225408298"></p>
<p><strong><a href="http://yearito.cn/">重点参考博客</a>,在此，对博主进行崇高的敬意。</strong></p>
<h3 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h3><p>使用过程经常报错，错误内容如下：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/picgo%E6%8A%A5%E9%94%99.jpg" alt="picgo报错"></p>
<p>初步解决办法：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/picgo%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3.jpg" alt="picgo报错解决"></p>
<p>打开CMD，win+R，输入<code>%appdata%</code>，</p>
<p>找到<code>data.json</code></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211121123938990.png" alt="image-20211121123938990"></p>
<p>删除。这个里面存储的是图床的相关信息。</p>
<p>然后重新启动<code>picgo</code>即可。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>jieba分词</title>
    <url>/2021/11/07/jieba%E5%88%86%E8%AF%8D/</url>
    <content><![CDATA[<p>昨天，做的那个数据分析报告用到了<code>jieba</code>分词。但是只是借用了别人的部分代码。具体函数代表什么还不太明白。今天去官网研究了下…..</p>
<span id="more"></span>

<h1 id="jieba官网简介"><a href="#jieba官网简介" class="headerlink" title="jieba官网简介"></a>jieba官网简介</h1><p>“结巴”中文分词：做最好的 Python 中文分词组件</p>
<p><code>&quot;Jieba&quot; (Chinese for &quot;to stutter&quot;) Chinese text segmentation: built to be the best Python Chinese word segmentation module.</code></p>
<p>支持三种分词模式：</p>
<p>精确模式，试图将句子最精确地切开，适合文本分析；<br>全模式，把句子中所有的可以成词的词语都扫描出来, 速度非常快，但是不能解决歧义；<br>搜索引擎模式，在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。<br>支持繁体分词</p>
<p>支持自定义词典</p>
<p>MIT 授权协议</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install jieba</span><br></pre></td></tr></table></figure>
<h1 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h1><p><code>jieba.cut</code> 方法接受三个输入参数: 需要分词的字符串；cut_all 参数用来控制是否采用全模式；HMM 参数用来控制是否使用 HMM 模型<br><code>jieba.cut_for_search</code> 方法接受两个参数：需要分词的字符串；是否使用 HMM 模型。该方法适合用于搜索引擎构建倒排索引的分词，粒度比较细</p>
<p>待分词的字符串可以是 unicode 或 UTF-8 字符串、GBK 字符串。注意：不建议直接输入 GBK 字符串，可能无法预料地错误解码成 UTF-8<br><code>jieba.cut </code>以及<code>jieba.cut_for_search</code>返回的结构都是一个可迭代的 generator，可以使用 for 循环来获得分词后得到的每一个词语(unicode)，</p>
<p>或者用<code>jieba.lcut</code> 以及<code>jieba.lcut_for_search</code>直接返回 list</p>
<p><code>jieba.Tokenizer(dictionary=DEFAULT_DICT) </code>新建自定义分词器，可用于同时使用不同词典。jieba.dt 为默认分词器，所有全局分词相关函数都是该分词器的映射。</p>
<h1 id="官网实例"><a href="#官网实例" class="headerlink" title="官网实例"></a>官网实例</h1><p>所以大概明白了生成词云需要的cut方法的具体参数都代表什么。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba <span class="keyword">as</span> jb</span><br><span class="line">str_li = jb.cut(<span class="string">&quot;我来到北京清华大学&quot;</span>,cut_all=<span class="literal">True</span>) <span class="comment"># 全模式</span></span><br><span class="line"><span class="built_in">print</span>(str_li)</span><br><span class="line">&lt;generator <span class="built_in">object</span> Tokenizer.cut at <span class="number">0x00000298C3987FC0</span>&gt; <span class="comment"># 可以看到返回了一个生成器。</span></span><br><span class="line"></span><br><span class="line">FullMode = <span class="string">&#x27;Full mode :&#x27;</span> + <span class="string">&#x27;/&#x27;</span>.join(str_li) <span class="comment">#全模式（不能解决歧义）</span></span><br><span class="line"><span class="built_in">print</span>(FullMode)</span><br><span class="line"></span><br><span class="line">str_li = jb.cut(<span class="string">&quot;我来到北京清华大学&quot;</span>,cut_all=<span class="literal">False</span>) <span class="comment"># 精确模式</span></span><br><span class="line">AccMode = <span class="string">&#x27;AccurateMode: &#x27;</span> + <span class="string">&#x27;/&#x27;</span>.join(str_li)</span><br><span class="line"><span class="built_in">print</span>(AccMode)</span><br><span class="line"></span><br><span class="line">AccurateMode: 我/来到/北京/清华大学 <span class="comment">#精确模式（适用于文本分析）</span></span><br><span class="line"></span><br><span class="line">str_li = jb.cut(<span class="string">&quot;我来到北京清华大学&quot;</span>) <span class="comment">#默认</span></span><br><span class="line">DefMode = <span class="string">&#x27;DefaultMode: &#x27;</span> + <span class="string">&#x27;/&#x27;</span>.join(str_li)</span><br><span class="line"><span class="built_in">print</span>(DefMode)</span><br><span class="line"></span><br><span class="line">DefaultMode: 我/来到/北京/清华大学 <span class="comment"># 我们可以看到，默认是精确模式</span></span><br><span class="line"></span><br><span class="line">long_sen = jb.cut_for_search(<span class="string">&quot;小明硕士毕业于中国科学院计算所，后在日本京都大学深造&quot;</span>)<span class="comment"># 搜索引擎模式</span></span><br><span class="line">Long = <span class="string">&#x27;search:&#x27;</span>+<span class="string">&#x27;,&#x27;</span>.join(long_sen)</span><br><span class="line"><span class="built_in">print</span>(Long)</span><br><span class="line"></span><br><span class="line">search:小明,硕士,毕业,于,中国,科学,学院,科学院,中国科学院,计算,计算所,，,后,在,日本,京都,大学,日本京都大学,深造</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后统一对比一下：</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(FullMode)</span><br><span class="line"><span class="built_in">print</span>(AccMode)</span><br><span class="line"><span class="built_in">print</span>(DefMode)</span><br><span class="line"><span class="built_in">print</span>(Long)</span><br><span class="line"></span><br><span class="line">Full mode :我/来到/北京/清华/清华大学/华大/大学</span><br><span class="line">AccurateMode: 我/来到/北京/清华大学</span><br><span class="line">DefaultMode: 他/来到/了/网易/杭研/大厦</span><br><span class="line">search:小明,硕士,毕业,于,中国,科学,学院,科学院,中国科学院,计算,计算所,，,后,在,日本,京都,大学,日本京都大学,深造</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对于基本的词云及词频分析来说已经足够了，词典什么的情感分析，下次研究。</p>
<p>下面试着对以前…….（long long ago）喜欢的一本小说（极品公子）做个词云分析。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba <span class="keyword">as</span> jb</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"></span><br><span class="line">text = <span class="built_in">open</span>(<span class="string">r&#x27;C:\Users\sunshine\Desktop\极品公子.txt&#x27;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>).read()</span><br><span class="line">text_f = jb.cut(text)</span><br><span class="line"></span><br><span class="line">text_s = <span class="string">&quot; &quot;</span>.join(text_f)</span><br><span class="line">boy_cloud = WordCloud().generate(text_s)</span><br><span class="line">plt.imshow(boy_cloud)</span><br><span class="line">plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110224246094.png" alt="无间道"></p>
<p>可以发现，毫无疑问，叶无道是主角。</p>
<p><a href="https://github.com/fxsjy/jieba">jeiba地址</a></p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>numpy统计函数和布尔型数组</title>
    <url>/2019/03/05/numpy%E7%BB%9F%E8%AE%A1%E5%87%BD%E6%95%B0%E5%92%8C%E5%B8%83%E5%B0%94%E5%9E%8B%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="统计函数"><a href="#统计函数" class="headerlink" title="统计函数"></a>统计函数</h2><p><strong>可以通过numpy的统计函数对整个数组或者某个轴向的数据进项统计计算。</strong></p>
<span id="more"></span>

<p>所谓的轴向，其实就是n维向量的某一维。或者说某一行，某一列。</p>
<blockquote>
<p><code>sum</code>对数组（向量）中全部或某个轴向的元素求和，长度为0，则<code>sum</code>为0.<br><code>mean</code>算数平均数，作用范围同<code>sum</code>，长度为0，结果为NaN。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: x = np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>)<span class="comment">#二维</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: x</span><br><span class="line">Out[<span class="number">3</span>]:</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: x.<span class="built_in">sum</span>()</span><br><span class="line">Out[<span class="number">4</span>]: <span class="number">36</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: np.<span class="built_in">sum</span>(x[<span class="number">0</span>])</span><br><span class="line">Out[<span class="number">5</span>]: <span class="number">3</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: np.<span class="built_in">sum</span>(x[:,<span class="number">0</span>])</span><br><span class="line">Out[<span class="number">6</span>]: <span class="number">9</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: x.mean()</span><br><span class="line">Out[<span class="number">7</span>]: <span class="number">4.0</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: np.mean(x[<span class="number">0</span>])</span><br><span class="line">Out[<span class="number">8</span>]: <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: np.mean(x[:,<span class="number">1</span>])</span><br><span class="line">Out[<span class="number">9</span>]: <span class="number">4.0</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: y = np.arange(<span class="number">18</span>).reshape(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>)<span class="comment">#三维                         </span></span><br><span class="line">                                                                </span><br><span class="line">In [<span class="number">11</span>]: y                                                        </span><br><span class="line">Out[<span class="number">11</span>]:                                                          </span><br><span class="line">array([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>],                                             </span><br><span class="line">        [ <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],                                             </span><br><span class="line">        [ <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>]],                                            </span><br><span class="line">                                                                  </span><br><span class="line">       [[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],                                             </span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>],                                             </span><br><span class="line">        [<span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>]]])                                           </span><br><span class="line">                                                                  </span><br><span class="line">In [<span class="number">12</span>]: np.<span class="built_in">sum</span>(y)                                                </span><br><span class="line">Out[<span class="number">12</span>]: <span class="number">153</span>                                                      </span><br><span class="line">                                                                  </span><br><span class="line">In [<span class="number">13</span>]: np.mean(y)                                               </span><br><span class="line">Out[<span class="number">13</span>]: <span class="number">8.5</span>                                                      </span><br><span class="line">                                                                  </span><br><span class="line">In [<span class="number">14</span>]: np.<span class="built_in">sum</span>(y[<span class="number">0</span>])                                             </span><br><span class="line">Out[<span class="number">14</span>]: <span class="number">36</span>                                                       </span><br><span class="line">                                                                  </span><br><span class="line">In [<span class="number">15</span>]: np.<span class="built_in">sum</span>(y[:,<span class="number">0</span>])                                           </span><br><span class="line">Out[<span class="number">15</span>]: <span class="number">33</span>                                                       </span><br><span class="line">                                                                  </span><br></pre></td></tr></table></figure>

<p>可以发现，**<code>sum，mean</code>不但能作为数组的实例方法调用，还可以作为Numpy函数调用。**</p>
<p>另外，<code>numpy</code>的<code>mean</code>,<code>sum</code>函数还可以接受一个<code>axis</code>参数，用于计算该轴向的参数值，咳咳，敲黑板，重点来了，什么轴向？</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">21</span>]: x  <span class="comment">#2维</span></span><br><span class="line">Out[<span class="number">21</span>]:</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">22</span>]: x.<span class="built_in">sum</span>(axis=<span class="number">0</span>)</span><br><span class="line">Out[<span class="number">22</span>]: array([ <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: x.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line">Out[<span class="number">23</span>]: array([ <span class="number">3</span>, <span class="number">12</span>, <span class="number">21</span>])</span><br><span class="line">In [<span class="number">24</span>]: y  <span class="comment">#3维                              </span></span><br><span class="line">Out[<span class="number">24</span>]:                                </span><br><span class="line">array([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>],                   </span><br><span class="line">        [ <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],                   </span><br><span class="line">        [ <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>]],                  </span><br><span class="line">                                        </span><br><span class="line">       [[ <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],                   </span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>],                   </span><br><span class="line">        [<span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>]]])                 </span><br><span class="line">                                        </span><br><span class="line">In [<span class="number">25</span>]: y.<span class="built_in">sum</span>(axis=<span class="number">0</span>)                  </span><br><span class="line">Out[<span class="number">25</span>]:                                </span><br><span class="line">array([[ <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>],                    </span><br><span class="line">       [<span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>],                    </span><br><span class="line">       [<span class="number">21</span>, <span class="number">23</span>, <span class="number">25</span>]])                   </span><br><span class="line">                                        </span><br><span class="line">In [<span class="number">26</span>]: y.<span class="built_in">sum</span>(axis=<span class="number">1</span>)                  </span><br><span class="line">Out[<span class="number">26</span>]:                                </span><br><span class="line">array([[ <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>],                    </span><br><span class="line">       [<span class="number">36</span>, <span class="number">39</span>, <span class="number">42</span>]])                   </span><br><span class="line">                                        </span><br><span class="line">In [<span class="number">27</span>]: y.<span class="built_in">sum</span>(axis=<span class="number">2</span>)                  </span><br><span class="line">Out[<span class="number">27</span>]:                                </span><br><span class="line">array([[ <span class="number">3</span>, <span class="number">12</span>, <span class="number">21</span>],                    </span><br><span class="line">       [<span class="number">30</span>, <span class="number">39</span>, <span class="number">48</span>]])                   </span><br><span class="line">                                        </span><br><span class="line">In [<span class="number">28</span>]: y.<span class="built_in">sum</span>(axis=<span class="number">3</span>) </span><br><span class="line">ValueError: <span class="string">&#x27;axis&#x27;</span> entry <span class="keyword">is</span> out of bounds    </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>经过试验，可以发现，</p>
<p><strong>没有<code>axis</code>参数表示全部相加，<code>axis＝0</code>表示按列相加，<code>axis＝1</code>表示按照行的方向相加。</strong> <code>axis = 2</code>，也是行相加，不过代表的是2维程度的相加。</p>
<p>另外，输入<code>axis = 3</code>，返回了错误，这说明，**<code>axis</code>参数的维度总是比数组低一层。**  </p>
<p>另外，<code>axis</code>还可以接受一个元组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">30</span>]: x.<span class="built_in">sum</span>(axis=(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">Out[<span class="number">30</span>]: <span class="number">36</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">30</span>]: x.<span class="built_in">sum</span>(axis=(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">Out[<span class="number">30</span>]: <span class="number">36</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">31</span>]: y.<span class="built_in">sum</span>(axis=(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">Out[<span class="number">31</span>]: array([<span class="number">45</span>, <span class="number">51</span>, <span class="number">57</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">32</span>]: y.<span class="built_in">sum</span>(axis=(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">Out[<span class="number">32</span>]: <span class="number">153</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">33</span>]: y.<span class="built_in">sum</span>(axis=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>))</span><br><span class="line">Out[<span class="number">33</span>]: <span class="number">153</span></span><br></pre></td></tr></table></figure>

<p>可以发现，输入元组，实现了行和列的先后相加，拿x来说，</p>
<p><strong><code>axis=(0,1)</code>代表了先进行列相加，再将列相加的结果进行行相加</strong>，</p>
<p>所以最后的结果和全部求和的结果是一致的。</p>
<p>而且，结果与其顺序是没有关系的。</p>
<blockquote>
<p><code>std、var</code> 分别为标准差和方差，自由度是可以进行调整的（默认为n）<br><code>min、max</code> 最小值最大值<br><code>argmin、argmax</code> 最小值，最大值索引<br><code>cumsum</code> 所有元素的累计和<br><code>cumprod</code> 所有元素的累计积</p>
</blockquote>
<p><strong>以上这些函数，也可以接受参数<code>axis</code>，并且用法和上方的<code>mean,sum</code>基本一致。</strong></p>
<p>但是<code>argmin、argmax、cumsum、cumprod</code>不接受元组。</p>
<p>自由度这一点有待进一步确定。</p>
<h4 id="结合布尔型数组"><a href="#结合布尔型数组" class="headerlink" title="结合布尔型数组"></a>结合布尔型数组</h4><p>以上这些方法还可以结合布尔型数组来使用。因为，在这些方法中，布尔值会被强制转换为0和1。</p>
<p>因此，<code>sum</code>可以对向量中的True值进行计数。如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">39</span>]: k = np.random.randn(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">40</span>]: np.<span class="built_in">sum</span>(k &gt; <span class="number">0</span>)</span><br><span class="line">Out[<span class="number">40</span>]: <span class="number">27</span></span><br></pre></td></tr></table></figure>

<p>除此外，对于布尔型数组，还有两个特别有用的方法：<code>any,all</code>。</p>
<blockquote>
<p><code>any</code>用于测试数组（向量）中是否存在True。<br><code>all</code>用于确定数组中是否全是True。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">In [<span class="number">41</span>]: arr = np.random.randn(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">42</span>]: arr</span><br><span class="line">Out[<span class="number">42</span>]:</span><br><span class="line">array([-<span class="number">0.77695399</span>, -<span class="number">1.04211228</span>,  <span class="number">0.85516427</span>, -<span class="number">0.04749936</span>, -<span class="number">1.32314252</span>,</span><br><span class="line">       -<span class="number">0.59968117</span>,  <span class="number">1.93582735</span>,  <span class="number">0.08567928</span>, -<span class="number">1.10820476</span>,  <span class="number">1.2410364</span> ])</span><br><span class="line"></span><br><span class="line">In [<span class="number">43</span>]: arr1 = arr&gt;<span class="number">0</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">44</span>]: arr1</span><br><span class="line">Out[<span class="number">44</span>]: array([<span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>], dtype=<span class="built_in">bool</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">45</span>]: arr1.<span class="built_in">any</span>()</span><br><span class="line">Out[<span class="number">45</span>]: <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">46</span>]: arr1.<span class="built_in">all</span>()</span><br><span class="line">Out[<span class="number">46</span>]: <span class="literal">False</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>pandas中轴axis的问题理解</title>
    <url>/2019/03/14/pandas%E4%B8%AD%E8%BD%B4axis%E7%9A%84%E9%97%AE%E9%A2%98%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>在学习删除方法<code>drop</code>时，碰到了，也突然想明白了，轴是什么意思。</p>
<span id="more"></span>

<p>引入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame<span class="comment">#导入包</span></span><br><span class="line">obj = Series(np.arange(<span class="number">5</span>),index = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>])<span class="comment">#创建Series  obj</span></span><br><span class="line">obj</span><br><span class="line">Out[<span class="number">2</span>]: </span><br><span class="line">a    <span class="number">0</span></span><br><span class="line">b    <span class="number">1</span></span><br><span class="line">c    <span class="number">2</span></span><br><span class="line">d    <span class="number">3</span></span><br><span class="line">e    <span class="number">4</span></span><br><span class="line">dtype: int32</span><br><span class="line"></span><br><span class="line">new_obj = obj.drop(<span class="string">&#x27;c&#x27;</span>)<span class="comment">#删除&#x27;c&#x27;</span></span><br><span class="line">new_obj</span><br><span class="line">Out[<span class="number">5</span>]: </span><br><span class="line">a    <span class="number">0</span></span><br><span class="line">b    <span class="number">1</span></span><br><span class="line">d    <span class="number">3</span></span><br><span class="line">e    <span class="number">4</span></span><br><span class="line">dtype: int32</span><br><span class="line"></span><br><span class="line">obj</span><br><span class="line">Out[<span class="number">6</span>]: </span><br><span class="line">a    <span class="number">0</span></span><br><span class="line">b    <span class="number">1</span></span><br><span class="line">c    <span class="number">2</span></span><br><span class="line">d    <span class="number">3</span></span><br><span class="line">e    <span class="number">4</span></span><br><span class="line">dtype: int32</span><br><span class="line"></span><br><span class="line">obj.drop([<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;d&#x27;</span>])<span class="comment">#删除&#x27;b&#x27;,&#x27;d&#x27;</span></span><br><span class="line">Out[<span class="number">7</span>]: </span><br><span class="line">a    <span class="number">0</span></span><br><span class="line">c    <span class="number">2</span></span><br><span class="line">e    <span class="number">4</span></span><br><span class="line">dtype: int32</span><br><span class="line"></span><br><span class="line">data = DataFrame(np.arange(<span class="number">25</span>).reshape(<span class="number">5</span>,<span class="number">5</span>),index = [<span class="string">&#x27;bj&#x27;</span>,<span class="string">&#x27;tj&#x27;</span>,<span class="string">&#x27;heb&#x27;</span>,<span class="string">&#x27;sjz&#x27;</span>,<span class="string">&#x27;sh&#x27;</span>],columns=[<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;three&#x27;</span>,<span class="string">&#x27;four&#x27;</span>,<span class="string">&#x27;five&#x27;</span>])<span class="comment">#创建DataFrame</span></span><br><span class="line">data</span><br><span class="line">Out[<span class="number">9</span>]: </span><br><span class="line">     one  two  three  four  five</span><br><span class="line">bj     <span class="number">0</span>    <span class="number">1</span>      <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">tj     <span class="number">5</span>    <span class="number">6</span>      <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">heb   <span class="number">10</span>   <span class="number">11</span>     <span class="number">12</span>    <span class="number">13</span>    <span class="number">14</span></span><br><span class="line">sjz   <span class="number">15</span>   <span class="number">16</span>     <span class="number">17</span>    <span class="number">18</span>    <span class="number">19</span></span><br><span class="line">sh    <span class="number">20</span>   <span class="number">21</span>     <span class="number">22</span>    <span class="number">23</span>    <span class="number">24</span></span><br><span class="line"></span><br><span class="line">data.drop([<span class="string">&#x27;bj&#x27;</span>,<span class="string">&#x27;tj&#x27;</span>])<span class="comment">#删除某行</span></span><br><span class="line">Out[<span class="number">10</span>]: </span><br><span class="line">     one  two  three  four  five</span><br><span class="line">heb   <span class="number">10</span>   <span class="number">11</span>     <span class="number">12</span>    <span class="number">13</span>    <span class="number">14</span></span><br><span class="line">sjz   <span class="number">15</span>   <span class="number">16</span>     <span class="number">17</span>    <span class="number">18</span>    <span class="number">19</span></span><br><span class="line">sh    <span class="number">20</span>   <span class="number">21</span>     <span class="number">22</span>    <span class="number">23</span>    <span class="number">24</span></span><br><span class="line"></span><br><span class="line">data.drop(<span class="string">&#x27;one&#x27;</span>,axis=<span class="number">1</span>)<span class="comment">#删除列</span></span><br><span class="line">Out[<span class="number">11</span>]: </span><br><span class="line">     two  three  four  five</span><br><span class="line">bj     <span class="number">1</span>      <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">tj     <span class="number">6</span>      <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">heb   <span class="number">11</span>     <span class="number">12</span>    <span class="number">13</span>    <span class="number">14</span></span><br><span class="line">sjz   <span class="number">16</span>     <span class="number">17</span>    <span class="number">18</span>    <span class="number">19</span></span><br><span class="line">sh    <span class="number">21</span>     <span class="number">22</span>    <span class="number">23</span>    <span class="number">24</span></span><br></pre></td></tr></table></figure>
<p>可已注意到的是，在上方使用<code>drop</code>时，删除列特意指明了<code>axis=1</code>. 而在查看drop的文档时，发现默认参数是<code>axis =0 </code>，这说明：</p>
<ul>
<li><code>axis = 0</code>代表的是行。</li>
<li><code>axis = 1</code>代表的是列。<br>这样想就明白了。但是接着问题来了，</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data</span><br><span class="line">Out[<span class="number">29</span>]: </span><br><span class="line">lie   one  two  three  four  five</span><br><span class="line">city                             </span><br><span class="line">bj      <span class="number">0</span>    <span class="number">1</span>      <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line">tj      <span class="number">5</span>    <span class="number">6</span>      <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line">heb    <span class="number">10</span>   <span class="number">11</span>     <span class="number">12</span>    <span class="number">13</span>    <span class="number">14</span></span><br><span class="line">sjz    <span class="number">15</span>   <span class="number">16</span>     <span class="number">17</span>    <span class="number">18</span>    <span class="number">19</span></span><br><span class="line">sh     <span class="number">20</span>   <span class="number">21</span>     <span class="number">22</span>    <span class="number">23</span>    <span class="number">24</span></span><br><span class="line"></span><br><span class="line">data.mean(axis = <span class="number">0</span>)<span class="comment">#求列平均</span></span><br><span class="line">Out[<span class="number">30</span>]: </span><br><span class="line">lie</span><br><span class="line">one      <span class="number">10.0</span></span><br><span class="line">two      <span class="number">11.0</span></span><br><span class="line">three    <span class="number">12.0</span></span><br><span class="line">four     <span class="number">13.0</span></span><br><span class="line">five     <span class="number">14.0</span></span><br><span class="line">dtype: float64</span><br><span class="line"></span><br><span class="line">data.mean(axis = <span class="number">1</span>)<span class="comment">#求行平均</span></span><br><span class="line">Out[<span class="number">31</span>]: </span><br><span class="line">city</span><br><span class="line">bj      <span class="number">2.0</span></span><br><span class="line">tj      <span class="number">7.0</span></span><br><span class="line">heb    <span class="number">12.0</span></span><br><span class="line">sjz    <span class="number">17.0</span></span><br><span class="line">sh     <span class="number">22.0</span></span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure>
<p>其实，我是有点蒙的，如果向上面那样理解的话。<br>发现问题了吗？<br>在<code>drop</code>中使用<code>axis=1</code>实际上是删掉了一列，而在<code>mean</code>中实际上是计算的行平均值，而不是列的平均值。<br>蒙了。嗯，看了Stackoverflow中的解释，大概是明白了。现记录如下。</p>
<p><strong>实际上axis = 1，指的是沿着行求所有列的平均值，代表了横轴，那axis = 0，就是沿着列求所有行的平均值，代表了纵轴。</strong></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-de17a1655283a433.png" alt="示意图"></p>
<p>那这样的话，<code>drop</code>就是沿着<code>&#39;two&#39;</code>的方向删除对应的轴标签为<code>axis = 1</code>的值。</p>
<p>又想到了numpy，pandas是以numpy为基础构造的库，因此，它保留了对于axis使用的方式。</p>
<p>参考：<a href="https://stackoverflow.com/questions/22149584/what-does-axis-in-pandas-mean"><a href="https://stackoverflow.com/questions/22149584/what-does-axis-in-pandas-mean">What does axis in pandas mean?</a></a></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>python</tag>
        <tag>Data analysis</tag>
        <tag>硕士期间</tag>
      </tags>
  </entry>
  <entry>
    <title>《谁说菜鸟不会数据分析》读书笔记</title>
    <url>/2021/11/07/%E3%80%8A%E8%B0%81%E8%AF%B4%E8%8F%9C%E9%B8%9F%E4%B8%8D%E4%BC%9A%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>花了一段时间学习了下菜鸟读书笔记，最大的感慨是这本书，纯粹是入门级。本书以Excel为主要操作软件，只要稍微有点Excel基础，绝对可以看懂，看完后，觉得对我用处最大的是数据分析的思想，而一些手段，反而是次要的。</p>
<span id="more"></span>



<p>以下是在读的过程中的一些学习总结，不足之处，诸君见谅。</p>
<h2 id="1-数据分析内容"><a href="#1-数据分析内容" class="headerlink" title="1.数据分析内容"></a>1.数据分析内容</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-117cd864b4606df8.png" alt="img"></p>
<p>数据分析</p>
<p>这一部分，主要介绍了什么数据分析，数据分析步骤，以及作为一个合格的数据分析所需要具备的品质。</p>
<p>总体来说，要进行数据分析，我们首先要知道自己的目的是什么，以及我们所要分析的内容，然后我们需要确定我们采用的数据分析方法，这需要我们知道一些营销或管理模型，从而根据内容确定分析方向。</p>
<h2 id="2-数据分析方法论"><a href="#2-数据分析方法论" class="headerlink" title="2.数据分析方法论"></a>2.数据分析方法论</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-8b915c7975ecb4bc.png" alt="img"></p>
<p>数据分析方法论</p>
<p>以前只是知道这些营销理论或者管理理论，现在才隐约知道该怎样使用他们。实践出真知。</p>
<h2 id="3-数据收集"><a href="#3-数据收集" class="headerlink" title="3.数据收集"></a>3.数据收集</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-a77faea71422aab7.png" alt="img"></p>
<p>数据收集</p>
<p>这部分是最重要的部分之一，主要介绍了数据收集的一些方法，重点介绍了调查问卷的正确使用方式，并向我们介绍了表的概念，表与SQL语言练习紧密，因为我们现在多数的数据都存储在关系型数据库中，如MySql等，同时，说了一些Excel的小技巧，以前学习了Excel的很多内容，看完这部分才对怎样运用Excel对数据处理有了大概的认识，及方向。</p>
<h2 id="4-数据处理"><a href="#4-数据处理" class="headerlink" title="4.数据处理"></a>4.数据处理</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-f81d9d44fc784e9b.png" alt="img"></p>
<h2 id="5-数据清洗"><a href="#5-数据清洗" class="headerlink" title="5.数据清洗"></a>5.数据清洗</h2><p>这部分是最为繁琐的步骤之一，其首先主要介绍了数据处理包括的四大部分内容：数据清洗、数据转化、数据提取、数据计算等。然后说明了清洗时，使用的一些Excel的技巧，其中，重复数据还可通过数据透视表进行辨别去除。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-a0020ed9dc65f908.png" alt="img"></p>
<p>数据加工</p>
<p>主要还是使用Excel怎么实现数据的加工，及加工所需要做的事情。不得不说一句VLOOUP很神奇。最后多句嘴，建议大家学习并使用Excel2013/2016，其***快速填充功能***，简直强大的无敌。</p>
<h2 id="6-数据分析工具"><a href="#6-数据分析工具" class="headerlink" title="6.数据分析工具"></a>6.数据分析工具</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-927dd467c9ffbfa6.png" alt="img"></p>
<p>数据透视表</p>
<p>数据分工具还有SPSS，SQL等等，因为书主要以Excel为例，因此这部分主要介绍了数据透视表的使用。建议去我要自学网学习曾贤志老师的数据透视表教程，详细而生动。数据透视表可以结合SQL使用，你知道吗？</p>
<h2 id="7-数据分析方法"><a href="#7-数据分析方法" class="headerlink" title="7.数据分析方法"></a>7.数据分析方法</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-f14cca613c2423da.png" alt="img"></p>
<p>数据分析方法</p>
<p>这一部分主要介绍了一些比较常见且基础的数据分析方法，如对比分析，分组分析等。以及他们的应用场合。</p>
<h2 id="8-数据展现"><a href="#8-数据展现" class="headerlink" title="8.数据展现"></a>8.数据展现</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-6ac6a74cc438a1e0.png" alt="img"></p>
<h2 id="9-数据展现"><a href="#9-数据展现" class="headerlink" title="9.数据展现"></a>9.数据展现</h2><p>此部分主要说明了图表的作用，以及图表的应用场合，和他们的制作方法（在Excel中）。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-4d118010db6ddffb.png" alt="img"></p>
<p>图表专业化</p>
<p>此部分主要说明了数据分析图表制作的目的，意义，以及需要注意的事项、小技巧等。</p>
<h2 id="10-8-数据分析报告"><a href="#10-8-数据分析报告" class="headerlink" title="10.8.数据分析报告"></a>10.8.数据分析报告</h2><p>这是最后一步了，也是相对来说比较重要的一步，因为前面所有的工作，都是为了这一步做准备的，我们的目的是让决策者看懂，为他们提供决策支持，决策依据。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-30bc008b0acbd855.png" alt="img"></p>
<p>数据分析报告</p>
<p>此部分的重点在于介绍数据分析报告及其制作原则。最后菜鸟以一个一般性的模板进行了总结分析。</p>
<p>数据分析学习任重而道远，继续努力。</p>
<p>以上。</p>
]]></content>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>python</title>
    <url>/2019/03/06/python/</url>
    <content><![CDATA[<h3 id="pyecharts安装地图包"><a href="#pyecharts安装地图包" class="headerlink" title="pyecharts安装地图包"></a>pyecharts安装地图包</h3><span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install echarts-countries-pypkg</span><br></pre></td></tr></table></figure>

<p>报错<code>Unknown or unsupported command &#39;install&#39;</code></p>
<p>这可能是因为我最近装了很多的环境导致的冲突，比如php，java环境等等。</p>
<p>解决方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip.exe install echarts-countries-pypkg</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://blog.csdn.net/qq_36854407/article/details/79314344">pip命令提示unknow or unsupported command install解决方法</a></p>
<h3 id="连接两个表"><a href="#连接两个表" class="headerlink" title="连接两个表"></a>连接两个表</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gg_commu_data = pd.merge(gg_data,way_commu_data,on = <span class="string">&#x27;call_id&#x27;</span>,how = <span class="string">&#x27;left&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>报错</p>
<p><code>ValueError: You are trying to merge on int64 and object columns. If you wish to proceed you should use pd.concat</code></p>
<p>这是，主键数据类型不同，一个是int，一个是对象。解决方法，更改数据类型。</p>
<h3 id="合并两个列为一列"><a href="#合并两个列为一列" class="headerlink" title="合并两个列为一列"></a>合并两个列为一列</h3><ol>
<li><p><strong>两列数据类型一样</strong></p>
<ol>
<li>直接合并</li>
</ol>
<p><code>way_commu_data[&#39;new&#39;] = way_commu_data[&#39;business_name&#39;] + way_commu_data[&#39;inter_idx&#39;]</code></p>
<ol start="2">
<li>加符号</li>
</ol>
<p><code>way_commu_data[&#39;new&#39;] = way_commu_data[&#39;business_name&#39;] +&quot;|&quot; + way_commu_data[&#39;inter_idx&#39;].map(str)</code></p>
</li>
<li><p><strong>数据类型不同</strong></p>
</li>
</ol>
<p><em>如果某一列是非str类型的数据，那么我们需要用到map(str)将那一列数据类型做转换 。</em></p>
<p><code>dataframe[&quot;newColumn&quot;] = dataframe[&quot;age&quot;].map(str) + dataframe[&quot;phone&quot;] + dataframe[&quot;address”] </code></p>
<ol start="3">
<li><strong>在某一列中加入字符串。</strong></li>
</ol>
<p><a href="https://blog.csdn.net/sscc_learning/article/details/76993816">这里采用格式化字符串的形式。</a></p>
<p><img src="https://s1.ax1x.com/2018/08/21/P48u36.png" alt="方法"></p>
<ol start="4">
<li><strong>用一列的非空值填充另一列对应的空值</strong></li>
</ol>
<p><code>way_commu_data.loc[way_commu_data[&#39;business_name_new&#39;].isnull(),&#39;business_name_new&#39;]=way_commu_data[way_commu_data[&#39;business_name_new&#39;].isnull()][&#39;inter_idx&#39;]</code></p>
<h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><h4 id="提取包含某些字符的字段报错"><a href="#提取包含某些字符的字段报错" class="headerlink" title="提取包含某些字符的字段报错"></a>提取包含某些字符的字段报错</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#找出target中包含字符1的列</span></span><br><span class="line">y = test[test[<span class="string">&#x27;target&#x27;</span>].<span class="built_in">str</span>.contains(<span class="string">&#x27;1&#x27;</span>)]</span><br></pre></td></tr></table></figure>

<p>报错：<code>ValueError: cannot index with vector containing NA / NaN values</code></p>
<p> 解决方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#找出target中包含字符1的列</span></span><br><span class="line">y = test[test[<span class="string">&#x27;target&#x27;</span>].<span class="built_in">str</span>.contains(<span class="string">&#x27;1&#x27;</span>, case=<span class="literal">False</span>, na=<span class="literal">False</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#If first line failed still is possible replace NaNs in condition in str.contains by parameter na=False:</span></span><br><span class="line"></span><br><span class="line">mask = dframe.Product.<span class="built_in">str</span>.contains(word, case=<span class="literal">False</span>, na=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#Or try omit inplace=True and assign back:</span></span><br><span class="line">dframe[<span class="string">&#x27;Product&#x27;</span>] = dframe[<span class="string">&#x27;Product&#x27;</span>].fillna(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p>1.<a href="https://stackoverflow.com/questions/48862235/python-valueerror-cannot-index-with-vector-containing-na-nan-values">stack</a></p>
<p>2.<a href="https://blog.csdn.net/Guo_ya_nan/article/details/81021158">csdn</a></p>
<ol start="6">
<li><a href="https://blog.csdn.net/htbeker/article/details/79645651"><strong>pandas.DataFrame中删除包涵特定字符串所在的行</strong></a></li>
<li><a href="https://blog.csdn.net/fontthrone/article/details/75212825"><strong>Pandas to_json() 中文乱码,转化为json数组</strong></a></li>
</ol>
<h3 id="PPT动态图实现方案"><a href="#PPT动态图实现方案" class="headerlink" title="PPT动态图实现方案"></a>PPT动态图实现方案</h3><p>将pyecharts的图生成html文件。</p>
<p>命令：<code>wordcloud.render()</code></p>
<h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><h4 id="读取txt文件时，报错"><a href="#读取txt文件时，报错" class="headerlink" title="读取txt文件时，报错"></a>读取txt文件时，报错</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">filename3 = <span class="string">&#x27;C:/Users/admin/Desktop/commu_data3.txt&#x27;</span></span><br><span class="line"><span class="comment">#设置分隔符为&#x27;,&#x27;，第一行为列名（列索引），设定不使用第一列作为行索引</span></span><br><span class="line">commu3 = pd.DataFrame(pd.read_table(filename3,sep = <span class="string">&#x27;,&#x27;</span>,header = <span class="number">0</span>,index_col = <span class="literal">False</span>,encoding = <span class="string">&#x27;gbk&#x27;</span>))</span><br></pre></td></tr></table></figure>

<p><code>ParserError: Error tokenizing data. C error: Expected 21 fields in line 3, saw 22</code></p>
<p>看他的意思是，底层的C代码不能解析数据，<strong>采用以下方案，将解析引擎设置为python。</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">filename3 = <span class="string">&#x27;C:/Users/admin/Desktop/commu_data3.txt&#x27;</span></span><br><span class="line"><span class="comment">#设置分隔符为&#x27;,&#x27;，第一行为列名（列索引），设定不使用第一列作为行索引</span></span><br><span class="line">commu3 = pd.DataFrame(pd.read_table(filename3,sep = <span class="string">&#x27;,&#x27;</span>,header = <span class="number">0</span>,index_col = <span class="literal">False</span>,encoding = <span class="string">&#x27;gbk&#x27;</span>,engine = <span class="string">&#x27;python&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h4 id="文件夹批量读取glob"><a href="#文件夹批量读取glob" class="headerlink" title="文件夹批量读取glob"></a>文件夹批量读取glob</h4><p><a href="https://docs.python.org/3.5/library/glob.html#module-glob">glob官方文档</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line"></span><br><span class="line">path = <span class="string">r&#x27;F:\公司文档\项目文档\中国人寿\数据\7月份数据\call_data&#x27;</span></span><br><span class="line"></span><br><span class="line">filenames = glob.glob(path + <span class="string">&quot;/*.txt&quot;</span>)</span><br><span class="line">frame = pd.DataFrame()</span><br><span class="line">list_call_data = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#用pandas读取所有数据，并连接到一个DataFrame中。</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> filenames:</span><br><span class="line">    filename =<span class="built_in">open</span>(file_name) </span><br><span class="line">    df = pd.read_table(filename,sep = <span class="string">&#x27;,&#x27;</span>,header = <span class="number">0</span>,index_col = <span class="literal">False</span>,encoding = <span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">    list_call_data.append(df)</span><br><span class="line">    </span><br><span class="line">frame = pd.concat(list_call_data)</span><br><span class="line"></span><br><span class="line">path = <span class="string">r&#x27;F:\公司文档\项目文档\中国人寿\数据\7月份数据\call_data&#x27;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://dataquestion.com/question/3526">参考1</a></p>
<p><a href="https://blog.csdn.net/LZGS_4/article/details/50371030">参考2</a></p>
<p><a href="https://blog.csdn.net/Sunshine_in_Moon/article/details/50246773">参考3</a></p>
<h3 id="pandas输出文件"><a href="#pandas输出文件" class="headerlink" title="pandas输出文件"></a>pandas输出文件</h3><p><a href="http://pandas.pydata.org/pandas-docs/stable/io.html#writing-json">pandas文档json写入</a></p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>公司大佬的分享</title>
    <url>/2021/11/10/%E5%85%AC%E5%8F%B8%E5%A4%A7%E4%BD%AC%E7%9A%84%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<h1 id="滴滴中台之路"><a href="#滴滴中台之路" class="headerlink" title="滴滴中台之路"></a>滴滴中台之路</h1><p>都是PPT截图，在来自于一位大佬的分享。</p>
<span id="more"></span>

<h2 id="为什么要建业务中台"><a href="#为什么要建业务中台" class="headerlink" title="为什么要建业务中台"></a>为什么要建业务中台</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220056857.png" alt="image-20211110220056857"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220137833.png" alt="image-20211110220137833"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220208374.png" alt="image-20211110220208374"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220245766.png" alt="image-20211110220245766"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220316283.png" alt="image-20211110220316283"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220336470.png" alt="image-20211110220336470"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220353398.png" alt="image-20211110220353398"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220435991.png" alt="image-20211110220435991"></p>
<h2 id="如何推进技术中台项目落地"><a href="#如何推进技术中台项目落地" class="headerlink" title="如何推进技术中台项目落地"></a>如何推进技术中台项目落地</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220453347.png" alt="image-20211110220453347"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220610065.png" alt="image-20211110220610065"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220630038.png" alt="image-20211110220630038"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220719145.png" alt="image-20211110220719145"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220735659.png" alt="image-20211110220735659"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220756926.png" alt="image-20211110220756926"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220820284.png" alt="image-20211110220820284"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220907901.png" alt="image-20211110220907901"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220922903.png" alt="image-20211110220922903"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220938475.png" alt="image-20211110220938475"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110220955242.png" alt="image-20211110220955242"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211110221036010.png" alt="image-20211110221036010"></p>
<h1 id="研发人员团队管理"><a href="#研发人员团队管理" class="headerlink" title="研发人员团队管理"></a>研发人员团队管理</h1><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002123384.png" alt="image-20211130002123384"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002154135.png" alt="image-20211130002154135"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002246841.png" alt="image-20211130002246841"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002304899.png" alt="image-20211130002304899"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002326364.png" alt="image-20211130002326364"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002428851.png" alt="image-20211130002428851"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002453384.png" alt="image-20211130002453384"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002510821.png" alt="image-20211130002510821"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002529079.png" alt="image-20211130002529079"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002549700.png" alt="image-20211130002549700"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002608935.png" alt="image-20211130002608935"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002626413.png" alt="image-20211130002626413"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002642282.png" alt="image-20211130002642282"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002720423.png" alt="image-20211130002720423"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002739529.png" alt="image-20211130002739529"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002752970.png" alt="image-20211130002752970"></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211130002805379.png" alt="image-20211130002805379"></p>
]]></content>
      <categories>
        <category>Job</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>工作知识记录</title>
    <url>/2020/03/15/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="工作中遇到的概念"><a href="#工作中遇到的概念" class="headerlink" title="工作中遇到的概念"></a>工作中遇到的概念</h1><p>记录一些工作中遇到的名词缩写及概念&amp;硬件知识&amp;软件知识。</p>
<span id="more"></span>

<blockquote>
<p><a href="https://en.wikipedia.org/wiki/Proof_of_concept">POC测试</a>，即Proof of Concept，属于概念验证。是业界流行的针对客户具体应用的验证性测试，根据用户对采用系统提出的性能要求和扩展需求的指标，在选用服务器上进行真实数据的运行，对承载用户数据量和运行时间进行实际测算，并根据用户未来业务扩展的需求加大数据量以验证系统和平台的承载能力和性能变化。</p>
</blockquote>
<blockquote>
<p><a href="https://baike.baidu.com/item/ivr">IVR</a>(Interactive Voice Response)即互动式语音应答，您只须用电话即可进入服务中心，可以根据操作提示收听手机娱乐产品，也可以根据用户输入的内容播放有关的信息。</p>
</blockquote>
<blockquote>
<p>UAP：UAP是华为的自动排队机名称，是自动呼叫分配（Automatic Call Distribution，ACD）的一种，是现代呼叫中心的组成模块，也是其核心技术。</p>
</blockquote>
<blockquote>
<p><a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BC%98%E5%8C%96/3132?fromtitle=SEO&fromid=102990">SEO</a>（Search Engine Optimization）：汉译为<a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">搜索引擎</a>优化。是一种方式：利用<a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/104812">搜索引擎</a>的规则提高<a href="https://baike.baidu.com/item/%E7%BD%91%E7%AB%99/155722">网站</a>在有关搜索引擎内的<a href="https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E6%8E%92%E5%90%8D/2092669">自然排名</a>。</p>
</blockquote>
<blockquote>
<p>ASR语音识别（Automatic Speech Recognition），将口述音频转换为文本，通过API调用识别不同音频源发来的实时音频，或识别音频文件。</p>
</blockquote>
<blockquote>
<p><a href="https://baike.baidu.com/item/OA%E7%B3%BB%E7%BB%9F/10677850">OA系统</a>的英文全称是：Office Automation System ，意为办公自动化系统。</p>
</blockquote>
<h1 id="硬件知识"><a href="#硬件知识" class="headerlink" title="硬件知识"></a>硬件知识</h1><h2 id="CPU和GPU"><a href="#CPU和GPU" class="headerlink" title="CPU和GPU"></a>CPU和GPU</h2><p>理解 GPU 和 CPU 之间区别的一种简单方式是比较它们如何处理任务。CPU 由专为顺序串行处理而优化的几个核心组成，而 GPU 则拥有一个由数以千计的更小、更高效的核心（专为同时处理多重任务而设计）组成的大规模并行计算架构。</p>
<p>GPU的特点是有大量的核（多达几千个核）和大量的高速内存，最初被设计用于游戏，计算机图像处理等。GPU主要擅长做类似图像处理的并行计算，所谓的“粗粒度并行（coarse-grainparallelism）”。这个对于图像处理很适用，因为像素与像素之间相对独立，GPU提供大量的核，可以同时对很多像素进行并行处理。但这并不能带来延迟的提升（而仅仅是处理吞吐量的提升）。比如，当一个消息到达时，虽然GPU有很多的核，但只能有其中一个核被用来处理当前这个消息，而且GPU核通常被设计为支持与图像处理相关的运算，不如CPU通用。GPU主要适用于在数据层呈现很高的并行特性（data-parallelism）的应用，比如GPU比较适合用于类似蒙特卡罗模拟这样的并行运算。 </p>
<p>CPU和GPU本身架构方式和运算目的不同导致了CPU和GPU之间的不同，主要不同点列举如下。</p>
<p><em><strong>更形象点的说法是：</strong></em></p>
<p>现在全班要去春游，你有一辆保时捷和一辆大巴：保时捷只有四个座位，但半个小时就到了；大巴有50个座位，但要一个多小时。为了让全班尽早过去，大巴一定是首选。从计算的角度看，各位的CPU就是保时捷，GPU就是大巴。GPU每个核心都很弱，但众多的核心还是让GPU在并行计算上拥有了相当的优势。另外一点，GPU有相当的价格优势。单纯从浮点数计算能力来看，不到300块的GT430（91.564G）已经接近于一两千块的i7（107.6G）。</p>
<p><a href="https://blog.csdn.net/qinglongzhan/article/details/82884266">参考</a></p>
<h2 id="音频存储的计算方式"><a href="#音频存储的计算方式" class="headerlink" title="音频存储的计算方式"></a>音频存储的计算方式</h2><p>每通电话3min，存储的音频是整通电话中客户说话识别交互的音频（8k格式），按1min计算，每天进线量按34万通计算</p>
<p>计算方式：<code>（8K*1min*60s*340000通）/1024= 159375MB≈155.64G</code></p>
<p>识别过程中会进行端点检查，除掉30%左右空音频，除掉后约为108.948G。</p>
<p>每日按110G数据；每月产生<code>110G*30=3300G≈3.2T</code>，按每月产生3.2T数据计算。</p>
<h3 id="声音的知识"><a href="#声音的知识" class="headerlink" title="声音的知识"></a>声音的知识</h3><p>音频采样所得的PCM都含有三个要素：声道(channel)、采样率(sample rate)、样本格式(sample rate)</p>
<h4 id="声道"><a href="#声道" class="headerlink" title="声道"></a>声道</h4><p>常见的声道有：</p>
<ol>
<li>单声道，mono</li>
<li>双声道，stereo，最常见的类型，包含左声道以及右声道</li>
<li>2.1声道，在双声道基础上加入一个低音声道</li>
<li>5.1声道，包含一个正面声道、左前方声道、右前方声道、左环绕声道、右环绕声道、一个低音声道，最早应用于早期的电影院</li>
<li>7.1声道，在5.1声道的基础上，把左右的环绕声道拆分为左右环绕声道以及左右后置声道，主要应用于BD以及现代的电影院</li>
</ol>
<h4 id="采样率"><a href="#采样率" class="headerlink" title="采样率"></a>采样率</h4><p>音频采样，是把声音从模拟信号转换为数字信号。采样率，就是每秒对声音进行采集的次数，同样也是所得的数字信号的每秒样本数。在对声音进行采样时，常用的采样率有：</p>
<ul>
<li>8,000 Hz - 电话所用采样率, 对于人的说话已经足够；</li>
<li>11,025 Hz - AM调幅广播所用采样率；</li>
<li>22,050 Hz和24,000 Hz - FM调频广播所用采样率；</li>
<li>32,000 Hz - miniDV 数码视频 camcorder、DAT (LP mode)所用采样率；</li>
<li>44,100 Hz - 音频 CD, 也常用于 MPEG-1 音频（VCD, SVCD, MP3）所用采样率；</li>
<li>47,250 Hz - 商用 PCM 录音机所用采样率；</li>
<li>48,000 Hz - miniDV、数字电视、DVD、DAT、电影和专业音频所用的数字声音所用采样率；</li>
<li>50,000 Hz - 商用数字录音机所用采样率；</li>
<li>96,000 或者 192,000 Hz - DVD-Audio、一些 LPCM DVD 音轨、BD-ROM（蓝光盘）音轨、和 HD-DVD （高清晰度 DVD）音轨所用所用采样率；</li>
<li>2.8224 MHz - Direct Stream Digital 的 1 位 sigma-delta modulation 过程所用采样率。</li>
</ul>
<p>采样越高，声音的还原就越真实越自然，人对频率的识别范围是 20HZ - 20000HZ, 如果每秒钟能对声音做 20000 个采样, 回放时就足可以满足人耳的需求. 所以 22050 的采样频率是常用的, 44100已是CD音质, 超过48000的采样对人耳已经没有意义。这和电影的每秒 24 帧图片的道理差不多。</p>
<h4 id="采样位数"><a href="#采样位数" class="headerlink" title="采样位数"></a>采样位数</h4><p>音频在经过采样得到样本后，还需要对该样本执行两个步骤：</p>
<p>1.量化。音频量化的量化位数常用的有：</p>
<ul>
<li>8bit (也就是1字节) 只能记录 256 个数, 也就是只能将振幅划分成 256 个等级; </li>
<li>16bit  (也就是2字节) 可以细到 65536 个数, 这已是 CD 标准了;  </li>
<li>32bit (也就是4字节) 能把振幅细分到 4294967296 个等级, 实在是没必要了；</li>
</ul>
<p>量化位数又叫做<strong>采样位数</strong>、<strong>位深度</strong>、<strong>分辨率，</strong> 它是指声音的连续强度被数字表示后可以分为多少级。N-bit的意思声音的强度被均分为2^N级。16-bit的话，就是65535级。这是一个很大的数了，人可能也分辨不出六万五千五百三十五分之一的音强差别。也可以说是声卡的分辨率，它的数值越大，分辨率也就越高，所发出声音的能力越强。这里的采样倍数主要针对的是信号的<strong>强度特性</strong>，采样率针对的是信号的<strong>时间（频率）特性</strong>这是两个不一样的概念。</p>
<p>2.二进制编码。也就是把量化所得的结果，即单个声道的样本，以二进制的码字进行存放。其中有两种存放方式：</p>
<p>直接以整形来存放量化结果，即Two’s complement code；</p>
<p>以浮点类型来存放量化结果，即Floating point encoding code。</p>
<p>大多数格式的PCM样本数据使用整形来存放，而在对一些对精度要求高的应用方面，则使用浮点型来表示PCM 样本数据。</p>
]]></content>
      <categories>
        <category>Job</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>工作的处理方式</title>
    <url>/2019/03/16/%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="工作经验"><a href="#工作经验" class="headerlink" title="工作经验"></a>工作经验</h2><blockquote>
<p>做项目，不管是哪个岗位，包括我，现在是运营岗位，与客户对接是最多的。</p>
<span id="more"></span>

<p>客户在使用我们的产品的时候，<strong>疯狂吐槽我们某一个功能</strong>，这就是风险，比如吐槽你的语义，吐槽你的NLP，这就是风险。<strong>我们需要领导意识到这个风险。</strong></p>
<p>因为接下来，如果客户与我们合作有二期项目，接下来可能二期的合同还会用到我们的语义。</p>
<p>而这个时候，一期用户对我们的语义印象极差，二期客户可能就不和我们签语义的合同，公司就会有损失。</p>
<p>这就是很大的风险。</p>
<p>我们应该反馈给项目经理，项目经理没有意识到我们就应该<strong>越级反馈</strong>，被领导骂了又怎样。<strong>直到达到应有的效果。</strong></p>
<p><strong>碰到事儿不能怕事儿，要去解决它！</strong></p>
</blockquote>
<h2 id="工作习惯"><a href="#工作习惯" class="headerlink" title="工作习惯"></a>工作习惯</h2><blockquote>
<p><strong>数据是在你身边的，我们要注意到，要注意数据的价值。</strong>会议上客户说的数据，我们要注意收集，整理！</p>
<p>这在市场分析的时候，市场的盘子有多大，很有可能会用到。</p>
</blockquote>
]]></content>
      <categories>
        <category>Job</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>拉钩数据职位分析报告</title>
    <url>/2019/03/14/%E6%8B%89%E9%92%A9%E6%95%B0%E6%8D%AE%E8%81%8C%E4%BD%8D%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<p><strong>本篇博客写于研究生期间。</strong></p>
<p>试着，做了一个拉勾网数据分析师职位的数据分析。</p>
<p>其实，虽然很想做数据分析师，但是是跨行，心里相当忐忑，做这个分析就相当于加深自己对数据分析这个行业的了解了。</p>
<span id="more"></span>

<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-3fbcec7158a3daef.png" alt="大致思路"></p>
<h1 id="起始"><a href="#起始" class="headerlink" title="起始"></a>起始</h1><h2 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h2><p>本来是想自己写个爬虫的，可是学了好久，还是不能融会贯通，总会出一些bug，只能继续学习，争取早日修成爬神功。又想着，总不能还没开始，就结束了这次实验。最后无意中发现了一个爬虫工具–八爪鱼、、只需要点点点（其实，当时有种挫败感）。不过，总算数据总算有了。</p>
<h3 id="数据的采集"><a href="#数据的采集" class="headerlink" title="数据的采集"></a>数据的采集</h3><p>数据的具体采集过程如下：</p>
<ol>
<li>下载安装八爪鱼采集器。</li>
<li>创建任务，选择列表及详情。</li>
<li>输入任务名称、备注。</li>
<li>输入采集网址</li>
<li>设置详情页链接，也就是点进具体的详情页。</li>
<li>设置好翻页。</li>
<li>点击需要采集的数据信息。</li>
<li>开始采集。</li>
<li>数据导出为excel。</li>
</ol>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="数据的清洗与处理"><a href="#数据的清洗与处理" class="headerlink" title="数据的清洗与处理"></a>数据的清洗与处理</h2><p>这里试着用了两种工具，Excel + Python，也比较了一下二者的优点。与前人所述基本一致，纸上得来终觉浅啊。</p>
<p>想说一下字段的命名，如果用了Python进行处理的话，最好还是把字段命名为英文，或者说字母。可以简化后期处理，会方便很多。</p>
<p>当然，你如果全用Excel是用中文命名，也是没有问题的。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-de3081466164482f.png" alt="字段"></p>
<h3 id="Excel的处理过程"><a href="#Excel的处理过程" class="headerlink" title="Excel的处理过程"></a>Excel的处理过程</h3><h4 id="预防万一"><a href="#预防万一" class="headerlink" title="预防万一"></a>预防万一</h4><p>所谓预防万一，就是将Excel另存一份源数据，以免后期发生不可预知错误。</p>
<h4 id="清洗与处理"><a href="#清洗与处理" class="headerlink" title="清洗与处理"></a>清洗与处理</h4><h5 id="命名字段"><a href="#命名字段" class="headerlink" title="命名字段"></a>命名字段</h5><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-aa69c333d0c186f3.png"></p>
<h5 id="处理salary列"><a href="#处理salary列" class="headerlink" title="处理salary列"></a>处理salary列</h5><p>新建工作表，将salary字段复制过来。</p>
<ol>
<li><p>清除所有格式。</p>
</li>
<li><p>数据-分列-固定符号-“-“</p>
</li>
<li><p>查找替换 k。这里说明下，清除格式后，无论查找大写K还是小写k，均可。</p>
</li>
<li><p>因为抓取的数据是一组区间值，无法直接使用，因此取薪资的中间值也就是平均值。使用函数 ‘MEDIAN’ ，它会返回一组数的中值，或者使用 ‘AVERAGE’ 也可。得到的值如下：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-1fa103862ac9d642.png"></p>
</li>
<li><p>再对这组值进行数据分析，数据-数据分析-描述统计，得到最大值，最小值，全距，再根据公式计算组数，组距，进行数据分组，再根据 ‘ FREQUENCY ‘函数计算每组频率。</p>
</li>
</ol>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-77115f85773a02a0.png"></p>
<p>接下来，就可以绘制图表了。</p>
<p>ps：或者直接在第5步，采用数据分析工具中的直方图，进行分析。</p>
<h5 id="处理experience、city、education、property、scale列"><a href="#处理experience、city、education、property、scale列" class="headerlink" title="处理experience、city、education、property、scale列"></a>处理experience、city、education、property、scale列</h5><p>新建工作表，复制。</p>
<ol>
<li>清除所有格式。</li>
<li>使用函数 ‘SUBSTITUTE’ 替换所有 “/“，或者直接查找替换。</li>
<li>数据透视表统计，绘图。</li>
</ol>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-b5a4bd3c68c60003.png"></p>
<h5 id="处理field列"><a href="#处理field列" class="headerlink" title="处理field列"></a>处理field列</h5><p>新建工作表，复制。</p>
<ol>
<li>清除所有格式</li>
<li>查找替换”、”,”,”为半角“，”。</li>
<li>分列。</li>
</ol>
<p>这样，基本就处理完了。</p>
<h2 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h2><h3 id="行业及职位数量"><a href="#行业及职位数量" class="headerlink" title="行业及职位数量"></a>行业及职位数量</h3><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-ea146df4f4158efa.png"></p>
<p>从图中可以看出，17个行业中，移动互联网对数据人才的需求量是最大的，其次是金融和电子商务，而生物服务、文化娱乐、旅游、分类信息、硬件等的需求量最少。我认为，这从一个侧面反映了移动互联网数据量的巨大，以及对人才的渴求。</p>
<h3 id="城市与职位"><a href="#城市与职位" class="headerlink" title="城市与职位"></a>城市与职位</h3><p>首先看一下，职位主要分布的区域：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-9ead4b973a1efd61.png"></p>
<p>从图中可以看到，招聘公司主要位于南方，东三省竟然没有。我认为，这个时代，对数据的重视程度从某种程度上说明了发展的质量，就这个样本数据来说，从某种程度上反映了东三省的发展速度较慢，不如南方。</p>
<p>再看一下，城市与职位：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-2941966e7a94ac89.png"></p>
<p>这里主要截取了前10个城市，毫无意外，北上广赫然在列，杭州也很多，排在广州前面。看来，我们这些想做数据分析师的人，都无法逃离北上广啊。嗯，你也可以去杭州，据在那儿生活了七八年的同学来说，他不想走了。</p>
<h3 id="行业、城市与薪资"><a href="#行业、城市与薪资" class="headerlink" title="行业、城市与薪资"></a>行业、城市与薪资</h3><p>前面数据处理得到了每个职位的平均薪资，这里进一步处理得到了每个行业在每个城市的平均薪资。下图是招聘最多的几个行业在每个城市的平均薪资。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-94028fa0ed6c3972.png"></p>
<p>从图中可以知道，整体上相对来说，广州在这些行业中属于较低的。北京、上海差距不是太大。</p>
<h3 id="招聘公司融资阶段"><a href="#招聘公司融资阶段" class="headerlink" title="招聘公司融资阶段"></a>招聘公司融资阶段</h3><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-4f750929d8dd9b42.png"></p>
<h3 id="招聘不同职称的数量"><a href="#招聘不同职称的数量" class="headerlink" title="招聘不同职称的数量"></a>招聘不同职称的数量</h3><p>这里借助python进行了统计：</p>
<pre><code>python

import pandas as pd
data = pd.DataFrame(pd.read_csv(r&#39;C:\Users\sunshine\Desktop\2017.8.20.csv&#39;,encoding = &#39;gbk&#39;))

data.columns
positionName = []
for i in range(len(data.position)):
    if &quot;实习&quot; in data.position[i]:
        positionName.append(&quot;实习&quot;)
    elif &quot;助理&quot; in data.position[i]:
        positionName.append(&quot;助理&quot;)
    elif &quot;专员&quot; in data.position[i]:
        positionName.append(&quot;专员&quot;)
    elif &quot;主管&quot; in data.position[i]:
        positionName.append(&quot;主管&quot;)
    elif &quot;经理&quot; in data.position[i]:
        positionName.append(&quot;经理&quot;)
    elif &quot;工程师&quot; in data.position[i]:
        positionName.append(&quot;工程师&quot;)
    elif &quot;总监&quot; in data.position[i]:
        positionName.append(&quot;总监&quot;)
    elif &quot;科学家&quot; in data.position[i]:
        positionName.append(&quot;科学家&quot;)
    elif &quot;架构&quot; in data.position[i]:
        positionName.append(&quot;架构师&quot;)
    else:
        positionName.append(&quot;其他&quot;)

data[&quot;positionName1&quot;] = positionName

data[&quot;positionName1&quot;].value_counts()
</code></pre>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-dcf17f437e25cba9.png"></p>
<p>这里没有用matplotlib画，借用了echarts。</p>
<h3 id="招聘公司对个人能力的要求"><a href="#招聘公司对个人能力的要求" class="headerlink" title="招聘公司对个人能力的要求"></a>招聘公司对个人能力的要求</h3><h4 id="招聘公司对应聘者的学历要求"><a href="#招聘公司对应聘者的学历要求" class="headerlink" title="招聘公司对应聘者的学历要求"></a>招聘公司对应聘者的学历要求</h4><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-29b4498a25253562.png"></p>
<p>从图中我们很明显可以得到，公司对应聘者的学历要求，本科以上占了绝大部分，这说明，90%以上的公司对应聘者的学历要求很高，我认为，这可能有以下原因：</p>
<ol>
<li>分析行业对应聘者的知识水平要求还是很高的，因为数据分析师不但要涉及很多高等数学，统计学，概率论，线性代数等数学知识，还要涉及很多行业知识。</li>
<li>这个行业需要应对很多日新月异的信息，各种东西更新迭代非常快，因此对应聘者的自学能力提出了很高的要求。</li>
</ol>
<h4 id="招聘公司对应聘者经验的要求"><a href="#招聘公司对应聘者经验的要求" class="headerlink" title="招聘公司对应聘者经验的要求"></a>招聘公司对应聘者经验的要求</h4><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-886d61b7112cce01.png"></p>
<p>大部分公司招的都是1-5年的，1年之下和经验不限的很少，所以说，实习经验很重要，没有实习经历，太难入行了。我泪奔。公司需要的都是老鸟啊。</p>
<h4 id="招聘公司对应聘者工具掌握的要求"><a href="#招聘公司对应聘者工具掌握的要求" class="headerlink" title="招聘公司对应聘者工具掌握的要求"></a>招聘公司对应聘者工具掌握的要求</h4><p>这里使用了python进行了正则匹配，和词云生成。</p>
<pre><code>python

import re
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import jieba as jb
from wordcloud import WordCloud

#转换数据格式
word_str = &#39;&#39;.join(data[&#39;description&#39;])
#对文本进行分词
word_split = jb.cut(word_str)
#使用|分割结果并转换格式
word_split1 = &quot;| &quot;.join(word_split)
#设置要匹配的关键词
pattern=re.compile(&#39;sql|mysql|posgresql|python|excel|spss|matlab|ppt|powerpoint|sas|[\br\b]|hadoop|spark|hive|ga|java|perl|tableau|eviews|presto&#39;)
#匹配所有文本字符
word_w=pattern.findall(word_split1)

word_s = str(word_w)

my_wordcloud = WordCloud().generate(word_s)
plt.imshow(my_wordcloud)
plt.axis(&quot;off&quot;)
plt.show()
</code></pre>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-b1a9d36585716fde.png"></p>
<p>有点丑…</p>
<p>因此，换了个工具…..</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-dccdb90e3eb91448.png"></p>
<p>好看点了，无论哪张图都说明，除了excel，如果，你懂R或者python，再加上SQL，和spss，喔，你是个香饽饽。</p>
<h4 id="招聘公司对应聘者技能的要求"><a href="#招聘公司对应聘者技能的要求" class="headerlink" title="招聘公司对应聘者技能的要求"></a>招聘公司对应聘者技能的要求</h4><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-d84521d19bda273e.png"></p>
<p>可以看到，公司对应聘者的要求大部分在数据分析能力和产品、业务等方面。看来，数据分析师最重要的还是懂业务，这也是我想发展的方向。至于数据挖掘方向，对数学功底要求太高了，毕竟我不是科班出身。但是，我觉得平时在实验室做的实验，其实和业务是一个道理。只不过，是将实验换成了产品。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于数据分析岗，招聘公司主要位于南方，但是以北京公司最多。不需要融资，B轮和上市公司对于该岗位的需求较大。并且主要是移动互联网行业的公司。企业对于应聘者的工具掌握多是Excel，Spss，Python，R，SQl等，如果你全会，那基本就是个香饽饽。在技能方面，企业比较看重数据分析，以及对业务、运营的理解。而对于应聘者而言，本科生学历完全足够了。就薪资而言，广州多有行业较其他城市偏低，北京和上海在同等工作经历下，薪资要领先于其他城市。</p>
<p><strong><a href="https://me.bdp.cn/api/su/SBEGK7Z8">所有的图</a></strong></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Data analysis</tag>
        <tag>硕士期间</tag>
      </tags>
  </entry>
  <entry>
    <title>智能座舱</title>
    <url>/2021/11/17/%E6%99%BA%E8%83%BD%E5%BA%A7%E8%88%B1/</url>
    <content><![CDATA[<p><strong>汽车智能座舱</strong>是指配备智能化和网联化车载产品的汽车座舱，汽车智能座舱由智能座舱内饰及座舱电子构成。汽车智能座舱通过智能座舱内饰和座舱电子的联动，实现人、路、车的智能交互，是重新定义人车关系的智能车载产品。</p>
<span id="more"></span>

<p>可以看B站的相关内容：<a href="https://search.bilibili.com/all?keyword=%E6%99%BA%E8%83%BD%E5%BA%A7%E8%88%B1&from_source=webtop_search&spm_id_from=333.999">智能座舱</a></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211117234124657.png" alt="image-20211117234124657"></p>
<h3 id="一些名词"><a href="#一些名词" class="headerlink" title="一些名词"></a>一些名词</h3><ul>
<li><strong>V2X:</strong>   V2X( Vehicle to Everything)，V2X是支持车辆与周围交通系统进行通信的技术，可实现车与万物互联的技术，包括 Vehicle- to Vehicle(车与车)， vehicle-to<br>infrastructure(车与基础设施)， vehicle-to- network(车与网络)和 vehicle-to- pedestrian(车与人)。</li>
<li><strong>云计算:</strong>  一种资源交付和使用模式，用户可通过互联网以自助服务的形式获取自身所需要的IT资源。</li>
<li><strong>SaaS：</strong> Software as a service，软件即服务，位于云架构上层，是一种软件交付模式。SaaS服务商将软件统一部署在自身服务上，客户可根据自己实际需求通过互联网向SaaS服务商采购所需的软件服务。</li>
<li><strong>Paas:</strong> Platform as a service，平台即服务，位于云架构中间层，是一种将软件开发平台作为服务提供给用户使用的云计算基础设施服务。</li>
<li><strong>Iaas:</strong> Infrastructure as a service，基础设施即服务，位于云架构底层，把IT基础设施作为一种服务通过网络对外提供，并根据用户对资源的实际使用量或占用量进行计费的一种服务模式。</li>
<li><strong>智能汽车：</strong>通过搭载自主探测设备，具备单车环境感知能力，能够进行自主决策并安全行驶至目的地的汽车。</li>
<li><strong>车联网：</strong>涵盖车内网、车际网和车云网，以特定通信协议和数据交互标准，实现车与车、人、路、平台之间信息交换的通信网络。</li>
<li><strong>5G：</strong>5 th generation mobile networks，第五代移动通信技术，一种具有高数据速率、低延迟、高吞吐量特征的数字蜂窝移动通信技术。</li>
<li><strong>ADAS:</strong> Advanced Driving Assistant Systen，高级驾驶辅助系统，通过传感器收集环境信息并分析决策，提醒驾驶员潜在危险的主动安全技术。</li>
<li><strong>环境感知：</strong>通过传感器或自组织网络，对道路、车辆、行人、交通标志等进行检测和识别的技术，目前多用于先进驾驶辅助系统。</li>
<li><strong>智能决策：</strong>对获取到的信息进行融合、分析判断车辆应该做出的最优决策</li>
<li><strong>AliOS：</strong>由阿里巴巴发布的面向汽车、loT终端、loT芯片和工业领域的物联网操作系统。</li>
<li><strong>IOT:</strong> The Internet of Things，物联网，通过各种信息传感器、射频识别技术、全球定位系统、红外感应器、激光扫描器等各种装置与技术，实时采集任何需要监控、连接、互动的物体或过程，采集其声、光、热、电、力学、化学、生物、位置等各种需要的信息，通过各类可能的网络接入，实现物与物、物与人的泛在连接，实现对物品和过程的智能化感知、识别和管理。</li>
<li><strong>HUD:</strong> Head Up Display，抬头显示器，一种利用光学反射原理将影像和信息投射到玻璃上的装置。</li>
<li><strong>OBD：</strong>On- borad diagnostics，随车诊断系统，汽车检测仪器访问汽车电脑EC∪的接口</li>
<li><strong>ECU:</strong> Electronic Control unit，电子控制器单元，是利用各种传感器、总线的数据采集与交换，来判断车辆状态以及司机的意图并通过执行器来操控汽车</li>
<li><strong>Ⅳl：</strong>in- Vehicle Infotainment，车载信息娱乐系统，是采用车载专用中央处理器，基于车身总线系统和互联网服务，形成的车载综合信息处理系统。</li>
<li><strong>流媒体后视镜：</strong>可实时观察后方路况的后视镜，通过髙淸的外置后视摄像头对车辆后方环境进行拍摄，并把图像呈现到后视镜上。</li>
</ul>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211117234142829.png" alt="image-20211117234142829"></p>
]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>理财知识</title>
    <url>/2021/11/24/%E7%90%86%E8%B4%A2%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="什么是财务自由"><a href="#什么是财务自由" class="headerlink" title="什么是财务自由"></a>什么是财务自由</h1><p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20211124204704872.png" alt="image-20211124204704872"></p>
<p><strong>投资是认知的变现。</strong></p>
<blockquote>
<p>康德（Immanuel Kant）对于自由的解读：</p>
<p><strong>自由不是你想干什么就干什么，而是你不想干什么就不干什么</strong>。</p>
</blockquote>
<span id="more"></span>

<p>我也非常认同这句话，在我看来，就是你可以有拒绝一件事情的底气。当你能做到这一点的时候，你在某种意义上就自由了。</p>
<p>我的理解看来，如果我的被动收入，能让我没了工作生活品质不下降，其实我就自由了。被动收入的方式有很多种，可能是理财、房租、专利费，等等，于我而言，其实最现实的是理财了。</p>
<blockquote>
<p>《也谈钱》</p>
<p>如果我们跳出财务自由是要得到什么的固有思维，认为它是面对不想要的生活时可以说不，那么财务自由并没有那么遥不可及。只要能够通过被动收入维持我们的日常生活，不再为了养家糊口被迫在工作上妥协，也就有了说不的勇气。</p>
</blockquote>
<p>对于我们普通人来说，本金、收益率、开支，这三个数字，是影响财务自由的关键。<code>本金*收益率=被动收入</code></p>
<p>被动收入-开支&gt;0，的时候，可以说，我们在某种意义上实现了财务自由。</p>
<h1 id="ETF拯救世界语录-长赢"><a href="#ETF拯救世界语录-长赢" class="headerlink" title="ETF拯救世界语录(长赢)"></a>ETF拯救世界语录(长赢)</h1><h2 id="投资是一场赌博"><a href="#投资是一场赌博" class="headerlink" title="投资是一场赌博"></a>投资是一场赌博</h2><ol>
<li><p>投资是一场赌博，不管你用什么方法做投资，都是一个可以通过努力取得大概率胜利的赌博游戏。</p>
</li>
<li><p>投资要遵守的理念：</p>
<ul>
<li>做大概率会胜利的投资；</li>
<li>在错误的时候，尽量将损失最小化；</li>
<li>在正确的时候，尽量将利润最大化。</li>
</ul>
<p>其实，为什么是ETF拯救世界，因为只要一个品种不会死，ETF早晚都会回来的。</p>
</li>
<li><p>估值投资指数基金这件事，理性的做法就是：随着估值越来越低，投入的资本越来越大，尽量将成本做到最低，但不奢望所有本金全部买在最低位。</p>
</li>
<li><p><strong>计算胜率，分配资源，等待收获。</strong></p>
</li>
<li><p><strong>我们投资，不是因为手里突然有钱了，或者别人都开始炒了，又或者多了一个可投资品种。而是因为：那个品种值得投资了。</strong></p>
</li>
<li><p>如果一个人没有经历没有学习没有经验，那么他99%的可能就是去送钱。这不是这个人的智商不行，而是这个赌场的规矩就是如此，想要动动鼠标就赚100%的事情，以前没有，现在没有，将来也不会有。———其实，<strong>E大就是在说，投资是认知的变现。</strong></p>
</li>
<li><p>金融投资想不被骗，有几个关键原则：</p>
<ul>
<li>第一，正规。法律允许的，政府保护的。</li>
<li>第二，你要知道整个产品的原理，如何募资，资金投向，资金监管。</li>
<li>第三，承诺收益过高，直接放弃。</li>
</ul>
</li>
</ol>
<h2 id="变富是一个慢慢的过程"><a href="#变富是一个慢慢的过程" class="headerlink" title="变富是一个慢慢的过程"></a>变富是一个慢慢的过程</h2><ol>
<li><strong>现金在我手里并不是一个每年只产品3%收益的垃圾，它是一种全力，一种真真正正的，大机会的现金选择权。</strong>投资是一场游戏，是一场只要本金还在，就有无数爆发机会的伟大游戏。</li>
<li>其实在实践中，<strong>是有办法让你的后悔最小化的。那就是投资组合。</strong>在牛市中空仓，和在熊市中满仓，一样会让你痛苦不堪，那么你可以通过配置不同的资产，来达到合理的收益，让自己的心态平稳。</li>
<li><strong>保护自己，不要损失本金，这是最重要的。</strong></li>
<li>投资最重要的事情就是控制风险。动辄满仓，动辄空仓，其实是投资体系很不成熟的一种表现。活下去，然后利润自然会到来。很多事情不必争论，谁对谁错，交给时间。</li>
</ol>
<h2 id="应对策略"><a href="#应对策略" class="headerlink" title="应对策略"></a>应对策略</h2><ol>
<li><p>面对资本市场的危机，我的建议： </p>
<ul>
<li><p>第一首先不要慌。</p>
</li>
<li><p> 第二，冷静的看自己手里的东西。有没有可能死的，有没有特别贵的。如果有，找机会处理掉。 </p>
</li>
<li><p><strong>第三，保命。</strong> </p>
</li>
<li><p><strong>第四，找机会进场捡漏。如果没有能力识别，就不捡，保命。</strong> </p>
</li>
<li><p>第五，坚持不慌。一开始不慌，最惨的时候更不慌。再次审视手里的东西。跌得很惨，但是会不会死。不会就不用慌。</p>
<p>尝试捡漏。 很久没买了，手里钱很多，不用慌。<strong>你有钱，你是甲方，市场是乙方。你是话事人。</strong></p>
</li>
</ul>
</li>
</ol>
<h2 id="财富数学"><a href="#财富数学" class="headerlink" title="财富数学"></a>财富数学</h2><h3 id="第一道题"><a href="#第一道题" class="headerlink" title="第一道题"></a>第一道题</h3><h4 id="大起大落注定平庸，甚至消灭财富。"><a href="#大起大落注定平庸，甚至消灭财富。" class="headerlink" title="大起大落注定平庸，甚至消灭财富。"></a>大起大落注定平庸，甚至消灭财富。</h4><p>如果上帝让你选择一种场景作为你未来的投资收益率，你会选择哪个？</p>
<ol>
<li>第一年赚80%，第二年赔40%，第三年赚80%，第四年赔40%……….</li>
<li>每年赚5%。</li>
</ol>
<p>大多数人也许会选第一种。因为你算了算，2年下来相当于赚了40%，每年20%，比5%强多了。</p>
<p>然而，从下表，我们可以看到准确的事实是，在偶数年第一种的年化也就是4%左右，还真不如第二种。</p>
<p>当然，你要是能在奇数年下了赌桌，那您是真的无敌。</p>
<table>
<thead>
<tr>
<th>利率</th>
<th>0.8</th>
<th>-0.4</th>
<th>0.8</th>
<th>-0.4</th>
<th>0.8</th>
<th>-0.4</th>
<th>0.8</th>
<th>-0.4</th>
<th>0.8</th>
<th>-0.4</th>
<th>0.8</th>
<th>-0.4</th>
</tr>
</thead>
<tbody><tr>
<td>财富</td>
<td>1.8</td>
<td>1.08</td>
<td>1.944</td>
<td>1.1664</td>
<td>2.09952</td>
<td>1.259712</td>
<td>2.2674816</td>
<td>1.36048896</td>
<td>2.448880128</td>
<td>1.469328077</td>
<td>2.644790538</td>
<td>1.586874323</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>利率</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
<td>0.05</td>
</tr>
<tr>
<td>财富</td>
<td>1.05</td>
<td>1.1025</td>
<td>1.157625</td>
<td>1.21550625</td>
<td>1.276281563</td>
<td>1.340095641</td>
<td>1.407100423</td>
<td>1.477455444</td>
<td>1.551328216</td>
<td>1.628894627</td>
<td>1.710339358</td>
<td>1.795856326</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>年份</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
<td>10</td>
<td>11</td>
<td>12</td>
</tr>
</tbody></table>
<h3 id="第二道题"><a href="#第二道题" class="headerlink" title="第二道题"></a>第二道题</h3><h4 id="80-50≠30"><a href="#80-50≠30" class="headerlink" title="80-50≠30"></a>80-50≠30</h4><p><strong>根据7080定律，如果一个不会死的品种极限跌幅在80%，那么，你在腰斩，也就是下跌50%的地方买入，到了跌幅80%的地方，你的亏损幅度是多少？</strong></p>
<p><strong>答案：并非你认为的80%-50%=30%，而是60%。</strong></p>
<p><em><strong>假设原价1元/份，50%就是0.5，80%就是0.2，所以你的亏损幅度是60%</strong></em><br>$$<br>（0.2-0.5)/0.5*100%<br>$$<br>同理，你在同样品种已经下跌60%的地方买入，到了下跌80%的时候并非浮亏20%，而是50%。在已经下跌了70%的地方买入，到了下跌80%的时候并非浮亏10%，而是33.33%。</p>
<p><strong>永远永远不要用想象去计算数学题。</strong></p>
<p>这道题的本质，就是告诉你当一个品种下跌，从0到-10%的距离，与 -70%到-80% 的距离完全不同。</p>
<p>这也是为什么熊市越到后来越惨烈的原因。那个时候财富的缩水远超一般人的承受能力，即使账面只变动了几个百分点。在熊市的末期，大多数一路抄底的人都会彻底崩溃。</p>
<p>因为他们的损失只比站在山顶上的人小一点而已。</p>
<p>你，还会疯狂的抄底吗。</p>
<h3 id="第三道数学题"><a href="#第三道数学题" class="headerlink" title="第三道数学题"></a>第三道数学题</h3><h4 id="不死品种浮亏后获利的最终奥义：补仓"><a href="#不死品种浮亏后获利的最终奥义：补仓" class="headerlink" title="不死品种浮亏后获利的最终奥义：补仓"></a>不死品种浮亏后获利的最终奥义：补仓</h4><p><strong>2块钱的价格买入1000元某指数基金。跌到1块钱的时候再买1000元，这时候你的成本是多少？</strong></p>
<p><strong>答案：并不是你以为的<code>1.5</code>元，而是<code>1.33</code>元。</strong><br>$$<br>1000/2+1000/1=1500份<br>$$</p>
<p>$$<br>(1000+1000)/1500=1.33元<br>$$</p>
<p><strong>当这只指数基金涨回<code>2</code>元起点的时候，你获利<code>50%</code>。</strong>（2-1.3）/1.3=0.5</p>
<p>很好，我们继续这场刺激的巨额浮亏之旅。</p>
<p>如果价格从<code>2</code>元跌到<code>1</code>元的时候，你买入的不是<code>1000</code>元，而是省吃俭用忍痛买入了<code>2000</code>元，那么你的成本将从<code>1.33</code>直降到<code>1.2</code>。不要小看这<code>0.13</code>元的成本下降，它将你回到起点的盈利幅度从<code>50%</code>提升到<code>66.67%</code>。而你的获利也从<code>1000</code>元上升到了<code>2000</code>元，绝对获利金额增加了<code>100%</code>。</p>
<p>如果从回本的角度讲，第一种方式在1元的时候要涨33%回本，第二种方式只要涨20%就回本。</p>
<p>那么，这道题告诉我们什么呢？</p>
<p>它给我的启示是，<strong>首先要弄清楚一个品种在这个时候买入还有可能跌多少。如果大概率还要继续跌，那么我买入多少后，未来大幅下跌后我是否还有能力补仓，降低成本，将一个“不成功”的投资做成反败为胜。</strong></p>
<p>对了，还有一点没跟你说，如果你觉得2元买入是有价值的，而后面的下跌50%真的是错杀，那么最后这个品种涨了50%，到了3元，那么你用后一种补仓方式将盈利：</p>
<p>150%。</p>
<p><strong>你真的那么害怕下跌吗？拜托，下跌才是暴利的源泉好吗。</strong></p>
<h3 id="语录"><a href="#语录" class="headerlink" title="语录"></a>语录</h3><blockquote>
<p>很好，理性让我们的命还在，那么接下来依然要理性。就如同不用恐惧一样，不要狂热，要保持冷静。永远永远的保持冷静，保持理性，保持思考，独立的思考。</p>
<p>对，事情没那么可怕，中国互联网巨头不会全都死掉。但未来也可能面临我们意想不到的坎坷。在理性买入的同时，请一定一定对最坏的预期有一个明确的判断，时刻保持清醒，保证自己在最坏事情发生不会崩溃的前提下，理性低买，理性抄底。</p>
<p><strong>空间、时间，至少要取其一。</strong></p>
<p>节奏，注意节奏。我们家里都没矿，我们都不可能无限买入。所以请一定规划好资金，制定好交易计划。底部少买点不会有什么大损失，然而一旦高估了自己的承受力，最终在底部情绪崩溃一键清仓，那才是人间惨剧，没个五年十年缓不过来的人间惨剧。</p>
<p>所以，朋友们。这次，在这个地方，不再有钻石坑的“左牵黄，右擎苍，锦帽貂裘，千骑卷平冈”，也不再有“会挽雕弓如满月，西北望，射天狼”，有的只是成熟后的淡定。</p>
<p>但有一样东西始终没变，就是面对这浮躁、疯狂、极为不理性的市场和人群，我们的那份坚定。</p>
<p>没那么好，也没那么坏。不断冷静的做我们该做的事，不要让投资这件事搞乱你的生活，搞乱你的情绪。</p>
<p><strong>投资啊，应该是带给你快乐的一件事。</strong></p>
</blockquote>
<p><a href="https://mp.weixin.qq.com/s/uxkJqpym95XoJ7b9Z53xmw">2021年12月ETF计划（一）：S卖出一份&amp;第一道数学题</a></p>
<p><a href="https://mp.weixin.qq.com/s/blbcvoeK0Ed-sOlIEvebuw">第二、第三道投资数学题；应用题——中概</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMTIzNDMwNA==&mid=2653409137&idx=1&sn=102ad8c1bf0fc5996652a6fb5ce25e1b&chksm=8d226d9eba55e4886fd2c73aab4c9c27cc117acfb1cc426aa4af0e59a0ea16feac3f9708589d&scene=21#wechat_redirect">波段策略.网格之一：写在前面、体系以及策略</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMTIzNDMwNA==&mid=2653409144&idx=1&sn=1df1af38ae67d645252a375f65b8c36b&chksm=8d226d97ba55e4815fec8c84281e84cbcc514ec3f6227109b81008059da44f344812ed5bc93a&scene=21#wechat_redirect">波段策略.网格之二：网格策略基础/1.0版</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIwMTIzNDMwNA==&mid=2653409191&idx=1&sn=5c305c5cf5237e8d2c8d8f7bf0320654&chksm=8d226d48ba55e45e96029083b5656d0c494a10c9c39cff79032ec0667157f36165d47be65957&scene=21#wechat_redirect">波段策略.网格之三：网格策略进阶/2.0版</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>理财</tag>
      </tags>
  </entry>
  <entry>
    <title>用数据讲故事</title>
    <url>/2021/11/07/%E7%94%A8%E6%95%B0%E6%8D%AE%E8%AE%B2%E6%95%85%E4%BA%8B/</url>
    <content><![CDATA[<h1 id="讲好一个故事的开始"><a href="#讲好一个故事的开始" class="headerlink" title="讲好一个故事的开始"></a>讲好一个故事的开始</h1><p>我们必须按照以下的顺序进行，这样才能做好数据的分析，讲好一个数据故事。</p>
<span id="more"></span>

<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-e79001f8cb55c9c0.png" alt="讲好故事的开始"> </p>
<h2 id="明确问题是什么"><a href="#明确问题是什么" class="headerlink" title="明确问题是什么"></a>明确问题是什么</h2><p>我们做一个汇报、分析、报告等等通常都是为了完成别人的请求，比如<strong>你的客户、老板、利益相关者</strong>。但是，通常，请求者或者要求者在说出他的需求时并不会详细的说明他的需求是什么，也有可能他认为这是你知道的，不需要讲的。因此我们在完成一个需求时，<strong>第一步，必须明确问题是什么。</strong></p>
<p>比如，老板要求我们给出一些互联网金融行业用户流失前的一些挽留措施。我们就必须知道以下问题：</p>
<ol>
<li><p> 流失的定义是什么？用户注销账户？账户资金为0？等等、、</p>
</li>
<li><p> 为什么会流失？是产品的问题？销售的问题？运营的问题？定位流失的原因。</p>
</li>
<li><p> 我们挽留的目标是什么？留人？还是留住资金？</p>
</li>
</ol>
<p>等等问题、这里只是抛砖引玉。我们实际情况中需要考虑的可能更多，毕竟我还停留在理想阶段。</p>
<p>其实，概括一下，就是：</p>
<ul>
<li><p>  背景信息是什么？</p>
</li>
<li><p>  受众和决策这是谁？</p>
</li>
<li><p>  有什么数据可以支撑这个案例？受众熟悉这些数据？</p>
</li>
<li><p>  有什么风险？什么因素会弱化案例？是否需要主动提出？</p>
</li>
</ul>
<p>等等。。。</p>
<h2 id="我们要做什么分析"><a href="#我们要做什么分析" class="headerlink" title="我们要做什么分析"></a>我们要做什么分析</h2><p>是探索性分析，还是解释性分析。</p>
<p><strong>探索性分析</strong>：理解数据并找出其中值得关注或分享给他人的精华。这就像是在找珍珠。</p>
<p>而<strong>解释性分析</strong>，就不要找珍珠的过程，而是直接把珍珠放到受众面前。但是这里有一个问题，直接展示结果会更高效便捷，可是老板知道你做了什么？但我觉得这不是主要的，因为老板都要的是结果而非过程。</p>
<h2 id="明确你的对象、内容、方式"><a href="#明确你的对象、内容、方式" class="headerlink" title="明确你的对象、内容、方式"></a>明确你的对象、内容、方式</h2><h3 id="对象是谁"><a href="#对象是谁" class="headerlink" title="对象是谁"></a>对象是谁</h3><p>你要给谁讲这个问题，你要搞明白你的受众是谁？这里最好具体化，因为越具体你和你的受众之间的沟通就会越高效。</p>
<p>而<strong>细分受众的最好方法之一就是，谁是这个问题的决策者。</strong></p>
<p>其次，你要给自己一个清晰地定位，明确你在受众心里的位置，这对你将做的事，和你怎样做这件事有很大的影响。你和受众熟不熟悉？在受众心中你是不是专家？</p>
<h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>我们需要受众了解什么或者做什么？这是我们的目标。</p>
<p>我们应该把这个目标当做一个灯塔，我们在准备的过程中必须时时刻刻瞄着他，记着他。</p>
<p>如果我们不能简介有效的表达这个目标，我们就应该审视一下前面的步骤，或者说我们应该考虑下是否需要沟通。</p>
<p>然后，自信的去演讲，去讲这个故事。</p>
<h3 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h3><p>如何和受众沟通？沟融的方法，会影响到我们信息披露的详细程度和受众消化信息的可控程度。</p>
<p>比如，我们需要和受众面对面沟通，做现场演示，那么我们此时不需要将所有的细节放在PPT或者展示文件中，因为我们可以在现场更有针对性的对受众的问题进行回答。如果我们不会和受众面对面沟通，我们就需要将详细的信息也就是文档的细节程度提高，因为我们无法对受众的反应进行回应，文档或者邮件在此时就必须回答更多的潜在问题。</p>
<p>但是，有一个需要注意的 问题，<strong>无论需不需要将细节放在演示中，我们都需要对所有的内容了然于胸。</strong>这就如同我们在讲课程PPT，我的习惯是，如果讲论文，我会将论文的图表数据等放在PPT中，其他不加。因为照本宣科的念，在我看来会分散受众的注意力。<strong>PPT应该是一个提示作用，而不应该是一个演讲稿。</strong></p>
<h3 id="语气"><a href="#语气" class="headerlink" title="语气"></a>语气</h3><p>这个问题在明确受众是谁的时候，我们就应该考虑好。庆祝成功？鼓励性的？轻松？还是严肃？</p>
<h3 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h3><p>我们在这里需要考虑什么样的数据可以表达我们的观点？数据才是我们这个故事的支撑性依据。</p>
<p><strong>最终，我们也要记得，如果是老板，我们要提供的是一个选择题，而不是单项选择题</strong>。</p>
<p><strong>总而言之，我们在第一步中，需要能做到一句话概括我们这个故事的中心思想，并且可以做到三分钟把故事讲完。</strong></p>
<p>这样，我们才有获得成功的基础。</p>
]]></content>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>精益数据分析-笔记</title>
    <url>/2019/03/06/%E7%B2%BE%E7%9B%8A%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h4 id="市场细分"><a href="#市场细分" class="headerlink" title="市场细分"></a><a href="http://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA%E7%BB%86%E5%88%86">市场细分</a></h4><p>市场细分（market segmentation）是指<a href="http://wiki.mbalib.com/wiki/%E8%90%A5%E9%94%80%E8%80%85">营销者</a>通过<a href="http://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA%E8%B0%83%E7%A0%94">市场调研</a>，依据<a href="http://wiki.mbalib.com/wiki/%E6%B6%88%E8%B4%B9%E8%80%85">消费者</a>的需要和欲望、<a href="http://wiki.mbalib.com/wiki/%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA">购买行为</a>和<a href="http://wiki.mbalib.com/wiki/%E8%B4%AD%E4%B9%B0%E4%B9%A0%E6%83%AF">购买习惯</a>等方面的差异，把某一<a href="http://wiki.mbalib.com/wiki/%E4%BA%A7%E5%93%81">产品</a>的市场整体划分为若干消费者群的市场分类过程。<span id="more"></span>每一个消费者群就是一个细分市场，每一个细分市场都是具有类似<a href="http://wiki.mbalib.com/wiki/%E9%9C%80%E6%B1%82">需求</a>倾向的消费者构成的<a href="http://wiki.mbalib.com/wiki/%E7%BE%A4%E4%BD%93">群体</a>。 </p>
<h4 id="同期群分析"><a href="#同期群分析" class="headerlink" title="同期群分析"></a><a href="http://www.woshipm.com/data-analysis/849738.html">同期群分析</a></h4><p><strong>同期群分析</strong>(Cohort Analysis，亦称群组分析)的主要目的是分析相似群体随时间的变化（比如用户的回访）。 </p>
<h4 id="A-B测试"><a href="#A-B测试" class="headerlink" title="A/B测试"></a><a href="https://www.zhihu.com/question/20045543">A/B测试</a></h4><p>A/B 测试，简单来说，就是为同一个目标制定两个方案（比如两个页面），让一部分用户使用 A 方案，另一部分用户使用 B 方案，记录下用户的使用情况，看哪个方案更符合设计。 </p>
<h4 id="多变量测试"><a href="#多变量测试" class="headerlink" title="多变量测试"></a><a href="http://www.woshipm.com/pd/1419.html">多变量测试</a></h4><p>我认为，多变量测试，其实就是类似于做实验的时候的多因素实验。你不知道哪个因素对结果（指标）的影响是最大的，类似于通过方差分析等手段来判断。只不过，多变量测试的结果，可能更加直观。</p>
<p>好久没发过，东西了。这段时间，毕业、入职，也断了学习。</p>
<p>进入公司，虽然没了自由，但是所幸，总算可以静下心来，沉淀一下。</p>
<p>无论什么时候，坚持学习，才能不断进步。</p>
<p>星空大海的未来三十多年，从今年开始。</p>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>统计学复习</title>
    <url>/2019/03/14/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ol>
<li>统计学是一门独立的学科。</li>
<li>统计学研究的是随机现象，而数学研究的是确定性的规律。</li>
<li>统计学的应用性很强，许多概念和原理来自于实际需要。</li>
<li>数学在统计学中很重要。</li>
</ol>
<span id="more"></span>

<h3 id="什么是统计学？"><a href="#什么是统计学？" class="headerlink" title="什么是统计学？"></a>什么是统计学？</h3><p>简单来说，<strong>统计学是一门教会我们如何同数据打交道，从中获取有用信息，并得出结论的学科。</strong></p>
<blockquote>
<p><strong>统计学定义；</strong><br><strong>统计学是用来收集和分析数据的一门学科和艺术。</strong>《大不列颠百科全书》<br><strong>统计学，具体来说，就是一门关于数据收集、整理、描述和分析的学科。</strong></p>
</blockquote>
<p>试验设计是统计学的分支。</p>
<h3 id="几个统计学概念"><a href="#几个统计学概念" class="headerlink" title="几个统计学概念"></a>几个统计学概念</h3><p>1.总体、总体容量（总体量）<br>2.个体<br>4.样本、样本容量（样本量）<br>5.变量（研究对象的特征或属性）、变量值<br>6.随机变量</p>
<h3 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h3><h4 id="数据的收集与描述"><a href="#数据的收集与描述" class="headerlink" title="数据的收集与描述"></a>数据的收集与描述</h4><h5 id="收集"><a href="#收集" class="headerlink" title="收集"></a>收集</h5><p>1.文献资料<br>2.观测<br>3.试验（自然科学研究，工业，好的试验设计的重要性）<br>4.问卷调查（社会科学，心理学，市场调研）<br>5.互联网（爬虫，电商）<br>6.物联网技术（会员卡，条形码）</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/%E7%BB%9F%E8%AE%A1%E5%AD%A6/%E6%95%B0%E6%8D%AE%E6%94%B6%E9%9B%86"></p>
<h4 id="数据的描述性分析"><a href="#数据的描述性分析" class="headerlink" title="数据的描述性分析"></a>数据的描述性分析</h4><p>这里主要介绍一些基本概念，包括算数平均数，加权平均数，几何平均数，调和平均数，极差，四分位差，平均差，方差，标准差，离散系数，峰度等。还复习了下数据的标准化，及是非标志的平均数和标准差。</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/%E7%BB%9F%E8%AE%A1%E5%AD%A6/%E7%BB%9F%E8%AE%A1%E5%AD%A61.png" alt="数据的描述性分析.png"></p>
<h4 id="统计抽样推断"><a href="#统计抽样推断" class="headerlink" title="统计抽样推断"></a>统计抽样推断</h4><p>统计抽样推断主要包括参数估计和假设检验。</p>
<h5 id="参数估计"><a href="#参数估计" class="headerlink" title="参数估计"></a>参数估计</h5><p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/%E7%BB%9F%E8%AE%A1%E5%AD%A6/%E7%BB%9F%E8%AE%A1%E6%8A%BD%E6%A0%B7%E6%8E%A8%E6%96%AD" alt="统计抽样推断.png"></p>
<h4 id="假设检验（显著性检验）"><a href="#假设检验（显著性检验）" class="headerlink" title="假设检验（显著性检验）"></a>假设检验（显著性检验）</h4><p>所谓假设检验就是对一个总体参数或总体分布形式的假设，利用样本资料来检验其真或伪的可能性。</p>
<p>假设检验的过程，可以用法庭的审理来说明。先想像现在法庭上有一名被告，假设该被告是清白的，而检察官必须要提出足够的证据去证明被告的确有罪。 在证明被告有罪前，被告是被假设为清白的。</p>
<ol>
<li>假设被告清白的假设，就相当于零假设（null hypothesis）。</li>
<li>假设被告有罪的假设，则是备择假设（alternative hypothesis）。</li>
</ol>
<p>而检察官提出的证据，是否足以确定该被告有罪，则要经过检验。 这样子的检验过程就相当于用T检验或Z检验去检视研究者所搜集到的统计资料。</p>
<p><img src="https://wenhua-image.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2/%E7%BB%9F%E8%AE%A1%E5%AD%A6/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C" alt="假设检验"><br>…..待续……</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Data analysis</tag>
        <tag>硕士期间</tag>
      </tags>
  </entry>
  <entry>
    <title>论文排版</title>
    <url>/2021/11/07/%E8%AE%BA%E6%96%87%E6%8E%92%E7%89%88/</url>
    <content><![CDATA[<p>王国维先生说，人生有三种境界，论文也是一样。我下面说的方法，主要是因为我受够了论文排版的折磨。然后自己想偷懒，从网上学习，加上自己总结，得出的一个方法。</p>
<span id="more"></span>



<p>本文于2013版word操作。</p>
<h1 id="第一步，要解决的问题"><a href="#第一步，要解决的问题" class="headerlink" title="第一步，要解决的问题"></a>第一步，要解决的问题</h1><p>写论文起始，你必须确定一个问题，你们学校对论文有没有关于论文版心的要求，也就是所谓的每页多少行，每行多少字。如果有，你第一步要做的就是调整好这个问题。如果没有建议你千万别动这个东西。方法如下：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-c6c925c4d048e7e5.gif" alt="img"></p>
<p>文档网络</p>
<h1 id="第二步，确定文章各个内容所采用的格式"><a href="#第二步，确定文章各个内容所采用的格式" class="headerlink" title="第二步，确定文章各个内容所采用的格式"></a>第二步，确定文章各个内容所采用的格式</h1><p>1、这一步，你要明确学校对于标题的要求，这些标题包括中文文章标题，英文文章标题，一级、二级、三级、四级、五级内容的标题。其实在这一步我建议大家，做一个excel表格，这样才能有条不紊。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-0c68580a5287f550.png" alt="img"></p>
<p>文档格式</p>
<p>知道了以上的东西，我们就要进行下面最重要的操作了。</p>
<p>2、word的菜单选项有一个功能一直在那儿放着，我觉得好像80%的人都没有用过。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-04ac434c5abe6eed.png" alt="img"></p>
<p>样式</p>
<p>这个才是我们的重点。有了它，我们可以结束修改论文格式时70%的繁琐重复操作。</p>
<p>接下来，我们就需要用1中所建立的表格，记录的各项的格式要求。具体操作如下：</p>
<p>点击样式栏右侧下三角–创建新样式。或者点击样式编辑器。我习惯第二种。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-0927eab84c191066.gif" alt="img"></p>
<p>样式编辑</p>
<p>我们可以根据1中的要求建立对应的格式了。这里以五级标题为例。</p>
<p>我们更改样式名称为五级标题，然后更改对应的格式。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-7b9adddc97ef69d0.gif" alt="img"></p>
<p>五级标题</p>
<p>注意这里的样式类型文章正文一般均为段落。样式基准说的是拟以什么为基准建立的新样式，后续段落样式等一般保持默认即可。</p>
<p>建立后，点击格式，去对应的段落，字体等选项中更改对应的要求。</p>
<p>最后的保存更改可以选择只在本文还有基于本模版的新文档。</p>
<p>3、大家可能注意到一个问题，样式类型中有表格这个选项，那么我们论文中最常用的表格可不可以建立样式呢？</p>
<p>答案，当然是可以的。</p>
<h1 id="表格对应样式的建立"><a href="#表格对应样式的建立" class="headerlink" title="表格对应样式的建立"></a>表格对应样式的建立</h1><p>1、表格样式的建立有两种途径，哪一种都可以，第一种是在样式编辑器中更改样式类型为表格，第二种是在插入表格之后建立。但是两种操作的后续操作都是一样的。</p>
<p>2、我们介绍插入表格之后建立：</p>
<p>首先插入任意一个表格，然后单击表格的任意位置，会出现设计选项卡，</p>
<p>单击设计–表格样式右侧的下三角–新建表格样式</p>
<p>下面是重头戏了。</p>
<p>设置线的磅数为1.5，选择下框线和上框线。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-567d9a076c5a4d7f.gif" alt="img"></p>
<p>表格样式</p>
<p>注意这里最关键的操作，三线表，第三条线的添加。</p>
<p>*<strong>将表格应用于—-更改为标题行—修改线为0.5磅–点击下框线。*</strong></p>
<p>注意到这里表格属性中的很多东西是不能更改的。比如尺寸和行高，列宽等。只能等以后单独改了。</p>
<p>我们试试效果：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-c4d72de3959483e7.gif" alt="img"></p>
<p>效果</p>
<p>注意到设计选项卡中的表格样式选项标题行的选择，如果没有打钩，很可能你会发现你做的样式不是三线表，要记得选上。</p>
<h1 id="页眉"><a href="#页眉" class="headerlink" title="页眉"></a>页眉</h1><p>有关页眉样式的制作也大同小异，但要注意到样式基准是页眉。</p>
<p>所需要进行的是要去格式中更改边框–选择边框样式。有关字体段落的格式按要求更改即可</p>
<p>其他在这里就不详述了。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-b7196fee9a8f5fe5.gif" alt="img"></p>
<p>页眉</p>
<p><strong>其实，这篇文章，写到这里就可以基本结束了。你可将你修改的文档另存为word模版了。</strong></p>
<p><strong>其他的细节性问题，如奇偶页页眉不同，首页页眉不同等等，都是要在具体的文章中具体分析了。这里涉及到分节符、分页符的使用。分节符，你也可以当做就是来打断页眉的，页眉中的选项连接到前一条页眉等，具体问题具体分析。尝试一下，就可以很快学会。</strong></p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-14ede71f4f930f35.png" alt="img"></p>
<p>页眉设置中最重要的几项</p>
<p><strong>而参考文献，如果你会使用endonte/noteexpress等文献管理软件，你就可以很好的解决这个问题了。</strong></p>
<p><strong>当然这里也有一个很笨的方法，一个个的插入，最后使用多级列表解决这个格式问题去编号库自定义即可。</strong></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>这是一个关键性问题。你需要注意要求显示多少级目录，还有每一级目录的字体格式等等。在生成目录时这些都可以一键搞定。当然生成目录的前提是，你已经把一到五级目录设置好，大纲级别设置好。如果你按照前面的步骤做了，这一步就很简单了。</p>
<p>这里还要注意，去设置缩进，否则做出的目录，就是下面这种</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-0babe0751bac7ff7.gif" alt="img"></p>
<p>目录</p>
<p>如果大家有什么问题欢迎一起学习，一起讨论。</p>
<p>我的公众号，基本是学习日志，还有一些小工具，一起来学习。</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/2151277-9c2d0acba08cd8ae.jpg" alt="公众号"></p>
]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>语音交互指标评价体系</title>
    <url>/2022/02/26/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92%E6%8C%87%E6%A0%87%E8%AF%84%E4%BB%B7%E4%BD%93%E7%B3%BB/</url>
    <content><![CDATA[<h1 id="语音交互机器人"><a href="#语音交互机器人" class="headerlink" title="语音交互机器人"></a>语音交互机器人</h1><p>语音交互机器人常用于<strong>呼入和呼出</strong>场景，这两种场景，数据流一般都是：</p>
<p><img src="https://wenhuatengimg.oss-cn-beijing.aliyuncs.com/Blog/image-20220226181035840.png" alt="image-20220226181035840"></p>
<p>当然也会有IOT场景，会涉及语音唤醒VAD等，这些场景都会涉及到对话管理模块。</p>
<h1 id="指标体系"><a href="#指标体系" class="headerlink" title="指标体系"></a>指标体系</h1><h2 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h2><p><strong>ASR（Automatic Speech Recognition）</strong>，即自动语音识别，是把声音转换成文字的技术。</p>
<p>一般它主要有两个指标，<strong>句识别率和字正确率。</strong>但是我们在工作中经常性说的98%这个值，一般都是说字正确率，它忽略了插入错误。</p>
<p>其实，一般会说三个值。<strong>字错误率，字正确率，字精确率。</strong></p>
<p>我们知道，ASR的转写结果一般有以下四类：</p>
<blockquote>
<p> 正确，即正确的字数，<strong>H</strong>；</p>
<p>错误（替换），即错误的字数，<strong>S</strong>；</p>
<p>插入，插入的字数，<strong>I</strong>；</p>
<p>删除（缺失），删除的字数，<strong>D</strong>；</p>
<p><strong>N为</strong> <strong>（替换 + 删除 + 正确）的字数；</strong></p>
</blockquote>
<h3 id="字错误率（CER：Character-Error-Rate）"><a href="#字错误率（CER：Character-Error-Rate）" class="headerlink" title="字错误率（CER：Character Error Rate）"></a>字错误率（CER：Character Error Rate）</h3><p><strong>CER=（S + D + I ） / N = （S + D + I ） / （S + D + C ）</strong></p>
<p>实际测试时，如果样本量较小，很可能出现错误率大于100%的情况，当然，大样本几乎不可能出现，不然你的模型也太差了。</p>
<h3 id="字正确率（Word-Correct）"><a href="#字正确率（Word-Correct）" class="headerlink" title="字正确率（Word Correct）"></a>字正确率（Word Correct）</h3><p><strong>W.Corr = C / N</strong></p>
<p>国内厂商宣传一般，都用这个值，只管正确的，忽略了插入的。</p>
<h3 id="字准确率-（Word-Accuracy）"><a href="#字准确率-（Word-Accuracy）" class="headerlink" title="字准确率 （Word Accuracy）"></a>字准确率 （Word Accuracy）</h3><p><strong>W.Acc = （C - I）/ N</strong></p>
<p>但是，实际上，ACC才是能准确反映ASR能力的指标。</p>
<p><strong>当I=0时，ACC=W.Corr</strong>,</p>
<p>可以看出来，Acc一般比Corr要小。</p>
]]></content>
      <tags>
        <tag>AI,ASR,TTs,NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>读书笔记</title>
    <url>/2019/03/06/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>有时，真是不能理解自己，所有的正统书籍都看不进去（当然不包括专业书籍，以及教学书），却对各种网文情有独钟，这么多年，玄幻文，历史文，穿越文，科技幻想，武侠等等，读了不知道多少。</p>
<span id="more"></span>

<p>总结下，最喜欢的作者是烽火戏诸侯，最喜欢的书是《雪中悍刀行》,有时间，定要再读。</p>
<p>[TOC]</p>
<h3 id="机破星河"><a href="#机破星河" class="headerlink" title="机破星河"></a>机破星河</h3><ol>
<li>有一个人说过，在这个世界上，看到的永远是表象。越接触这个庞大的世界，才越知道自己的渺小。如果一路冒然的撞过去，很有可能会头破血流。”</li>
<li>不敬强权，不畏死亡，心怀梦想，至死方休。</li>
</ol>
<h3 id="我的1979"><a href="#我的1979" class="headerlink" title="我的1979"></a>我的1979</h3><blockquote>
<p>大多数人想要改造这个世界，但却罕有人想改造自我”。</p>
</blockquote>
<h3 id="侠行天下"><a href="#侠行天下" class="headerlink" title="侠行天下"></a>侠行天下</h3><blockquote>
<p>我和你讲道理，你和我耍流氓，我和你耍流氓，你和我讲法律，我和你讲法律，你和我玩实力，我和你玩实力，你和我讲道理……就是这个意思，这个世界的公道终究是力量来决定，所谓的法律，永远是统治阶层为了更好统治而立下的秩序</p>
</blockquote>
<h3 id="大魏宫廷"><a href="#大魏宫廷" class="headerlink" title="大魏宫廷"></a>大魏宫廷</h3><blockquote>
<p>注：一个冷知识，为何握手是用右手？因为古代普遍是右手拿兵器，摊开右手，表示手中没有兵器，这是向对方表达善意的举动，不是因为惯用手的缘故。同理，抱拳时左手压右手，左手为尊，压着右手，象征和平。<br>(经查证确实有这种说法)</p>
</blockquote>
<h3 id="大国医"><a href="#大国医" class="headerlink" title="大国医"></a>大国医</h3><ol>
<li>步子大了容易扯着蛋。”</li>
<li>寒不累时则霜不降，温不兼日则冰不释。</li>
<li>面对谣言，事实有时候很乏力。因为很多人传播谣言并不是因为他相信，只是因为见不得别人的高大映射出自己的“小”来。如果能将那些高大的人拉到跟自己一样的高度，无疑会十分快意。</li>
<li>任何一个睿智的人，都知道做人不能太功利。然而为什么世人都一副鼠目寸光、功利小人的姿态？很大一个原因是危机感。即便有了稳定的生活，还是会觉得人生苦短，譬如朝露。</li>
<li>对于这些常人而言，他们根本没有时间去见识那么大的世界，没有胆量在无关乎生活的领域投入精力和时间。这种焦虑还会传染给他们的孩子，让他们“两耳不闻窗外事，一心只读圣贤书”，浑然不知道欣赏花朵绽放、倾听的虫鸣蛙唱的乐趣和意义。</li>
<li>此生无余事，不负好时光。”</li>
</ol>
<h3 id="医师"><a href="#医师" class="headerlink" title="医师"></a>医师</h3><blockquote>
<p>生孩子，是这个世界上最痛苦的事情之一！<br>电视上，电影上，经常都会有孕妇生孩子的镜头，而且无一例外，这些镜头上的产妇，都是披头散发，汗湿满面。尤其是生产的时候，撕心裂肺的叫声，还有那满脸的痛苦表情，让人不由得心生惧意。</p>
</blockquote>
<h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><blockquote>
<p>人间只道黄金贵，不问天公买少年；</p>
</blockquote>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
</search>
